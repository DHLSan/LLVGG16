// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="dense_reluflatten_softmax,hls_ip_2017_4_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.090000,HLS_SYN_LAT=-1805374811,HLS_SYN_TPT=none,HLS_SYN_MEM=150,HLS_SYN_DSP=42,HLS_SYN_FF=6636,HLS_SYN_LUT=10154}" *)

module dense_reluflatten_softmax (
        ap_clk,
        ap_rst_n,
        s_axi_CONTROL_AWVALID,
        s_axi_CONTROL_AWREADY,
        s_axi_CONTROL_AWADDR,
        s_axi_CONTROL_WVALID,
        s_axi_CONTROL_WREADY,
        s_axi_CONTROL_WDATA,
        s_axi_CONTROL_WSTRB,
        s_axi_CONTROL_ARVALID,
        s_axi_CONTROL_ARREADY,
        s_axi_CONTROL_ARADDR,
        s_axi_CONTROL_RVALID,
        s_axi_CONTROL_RREADY,
        s_axi_CONTROL_RDATA,
        s_axi_CONTROL_RRESP,
        s_axi_CONTROL_BVALID,
        s_axi_CONTROL_BREADY,
        s_axi_CONTROL_BRESP,
        interrupt,
        s_axi_INPUT_AWVALID,
        s_axi_INPUT_AWREADY,
        s_axi_INPUT_AWADDR,
        s_axi_INPUT_WVALID,
        s_axi_INPUT_WREADY,
        s_axi_INPUT_WDATA,
        s_axi_INPUT_WSTRB,
        s_axi_INPUT_ARVALID,
        s_axi_INPUT_ARREADY,
        s_axi_INPUT_ARADDR,
        s_axi_INPUT_RVALID,
        s_axi_INPUT_RREADY,
        s_axi_INPUT_RDATA,
        s_axi_INPUT_RRESP,
        s_axi_INPUT_BVALID,
        s_axi_INPUT_BREADY,
        s_axi_INPUT_BRESP,
        s_axi_OUTPUT_AWVALID,
        s_axi_OUTPUT_AWREADY,
        s_axi_OUTPUT_AWADDR,
        s_axi_OUTPUT_WVALID,
        s_axi_OUTPUT_WREADY,
        s_axi_OUTPUT_WDATA,
        s_axi_OUTPUT_WSTRB,
        s_axi_OUTPUT_ARVALID,
        s_axi_OUTPUT_ARREADY,
        s_axi_OUTPUT_ARADDR,
        s_axi_OUTPUT_RVALID,
        s_axi_OUTPUT_RREADY,
        s_axi_OUTPUT_RDATA,
        s_axi_OUTPUT_RRESP,
        s_axi_OUTPUT_BVALID,
        s_axi_OUTPUT_BREADY,
        s_axi_OUTPUT_BRESP,
        s_axi_parameter_AWVALID,
        s_axi_parameter_AWREADY,
        s_axi_parameter_AWADDR,
        s_axi_parameter_WVALID,
        s_axi_parameter_WREADY,
        s_axi_parameter_WDATA,
        s_axi_parameter_WSTRB,
        s_axi_parameter_ARVALID,
        s_axi_parameter_ARREADY,
        s_axi_parameter_ARADDR,
        s_axi_parameter_RVALID,
        s_axi_parameter_RREADY,
        s_axi_parameter_RDATA,
        s_axi_parameter_RRESP,
        s_axi_parameter_BVALID,
        s_axi_parameter_BREADY,
        s_axi_parameter_BRESP
);

parameter    ap_ST_fsm_state1 = 107'd1;
parameter    ap_ST_fsm_state2 = 107'd2;
parameter    ap_ST_fsm_state3 = 107'd4;
parameter    ap_ST_fsm_state4 = 107'd8;
parameter    ap_ST_fsm_state5 = 107'd16;
parameter    ap_ST_fsm_state6 = 107'd32;
parameter    ap_ST_fsm_state7 = 107'd64;
parameter    ap_ST_fsm_state8 = 107'd128;
parameter    ap_ST_fsm_state9 = 107'd256;
parameter    ap_ST_fsm_state10 = 107'd512;
parameter    ap_ST_fsm_state11 = 107'd1024;
parameter    ap_ST_fsm_state12 = 107'd2048;
parameter    ap_ST_fsm_state13 = 107'd4096;
parameter    ap_ST_fsm_state14 = 107'd8192;
parameter    ap_ST_fsm_state15 = 107'd16384;
parameter    ap_ST_fsm_state16 = 107'd32768;
parameter    ap_ST_fsm_state17 = 107'd65536;
parameter    ap_ST_fsm_state18 = 107'd131072;
parameter    ap_ST_fsm_state19 = 107'd262144;
parameter    ap_ST_fsm_state20 = 107'd524288;
parameter    ap_ST_fsm_state21 = 107'd1048576;
parameter    ap_ST_fsm_state22 = 107'd2097152;
parameter    ap_ST_fsm_state23 = 107'd4194304;
parameter    ap_ST_fsm_state24 = 107'd8388608;
parameter    ap_ST_fsm_state25 = 107'd16777216;
parameter    ap_ST_fsm_state26 = 107'd33554432;
parameter    ap_ST_fsm_state27 = 107'd67108864;
parameter    ap_ST_fsm_pp0_stage0 = 107'd134217728;
parameter    ap_ST_fsm_pp0_stage1 = 107'd268435456;
parameter    ap_ST_fsm_state37 = 107'd536870912;
parameter    ap_ST_fsm_state38 = 107'd1073741824;
parameter    ap_ST_fsm_state39 = 107'd2147483648;
parameter    ap_ST_fsm_state40 = 107'd4294967296;
parameter    ap_ST_fsm_state41 = 107'd8589934592;
parameter    ap_ST_fsm_state42 = 107'd17179869184;
parameter    ap_ST_fsm_state43 = 107'd34359738368;
parameter    ap_ST_fsm_state44 = 107'd68719476736;
parameter    ap_ST_fsm_state45 = 107'd137438953472;
parameter    ap_ST_fsm_state46 = 107'd274877906944;
parameter    ap_ST_fsm_state47 = 107'd549755813888;
parameter    ap_ST_fsm_state48 = 107'd1099511627776;
parameter    ap_ST_fsm_state49 = 107'd2199023255552;
parameter    ap_ST_fsm_state50 = 107'd4398046511104;
parameter    ap_ST_fsm_state51 = 107'd8796093022208;
parameter    ap_ST_fsm_state52 = 107'd17592186044416;
parameter    ap_ST_fsm_state53 = 107'd35184372088832;
parameter    ap_ST_fsm_state54 = 107'd70368744177664;
parameter    ap_ST_fsm_state55 = 107'd140737488355328;
parameter    ap_ST_fsm_state56 = 107'd281474976710656;
parameter    ap_ST_fsm_state57 = 107'd562949953421312;
parameter    ap_ST_fsm_state58 = 107'd1125899906842624;
parameter    ap_ST_fsm_state59 = 107'd2251799813685248;
parameter    ap_ST_fsm_state60 = 107'd4503599627370496;
parameter    ap_ST_fsm_state61 = 107'd9007199254740992;
parameter    ap_ST_fsm_state62 = 107'd18014398509481984;
parameter    ap_ST_fsm_state63 = 107'd36028797018963968;
parameter    ap_ST_fsm_state64 = 107'd72057594037927936;
parameter    ap_ST_fsm_state65 = 107'd144115188075855872;
parameter    ap_ST_fsm_state66 = 107'd288230376151711744;
parameter    ap_ST_fsm_pp2_stage0 = 107'd576460752303423488;
parameter    ap_ST_fsm_pp2_stage1 = 107'd1152921504606846976;
parameter    ap_ST_fsm_state77 = 107'd2305843009213693952;
parameter    ap_ST_fsm_state78 = 107'd4611686018427387904;
parameter    ap_ST_fsm_state79 = 107'd9223372036854775808;
parameter    ap_ST_fsm_state80 = 107'd18446744073709551616;
parameter    ap_ST_fsm_state81 = 107'd36893488147419103232;
parameter    ap_ST_fsm_state82 = 107'd73786976294838206464;
parameter    ap_ST_fsm_state83 = 107'd147573952589676412928;
parameter    ap_ST_fsm_state84 = 107'd295147905179352825856;
parameter    ap_ST_fsm_state85 = 107'd590295810358705651712;
parameter    ap_ST_fsm_state86 = 107'd1180591620717411303424;
parameter    ap_ST_fsm_state87 = 107'd2361183241434822606848;
parameter    ap_ST_fsm_state88 = 107'd4722366482869645213696;
parameter    ap_ST_fsm_state89 = 107'd9444732965739290427392;
parameter    ap_ST_fsm_state90 = 107'd18889465931478580854784;
parameter    ap_ST_fsm_state91 = 107'd37778931862957161709568;
parameter    ap_ST_fsm_state92 = 107'd75557863725914323419136;
parameter    ap_ST_fsm_state93 = 107'd151115727451828646838272;
parameter    ap_ST_fsm_state94 = 107'd302231454903657293676544;
parameter    ap_ST_fsm_state95 = 107'd604462909807314587353088;
parameter    ap_ST_fsm_state96 = 107'd1208925819614629174706176;
parameter    ap_ST_fsm_state97 = 107'd2417851639229258349412352;
parameter    ap_ST_fsm_state98 = 107'd4835703278458516698824704;
parameter    ap_ST_fsm_state99 = 107'd9671406556917033397649408;
parameter    ap_ST_fsm_state100 = 107'd19342813113834066795298816;
parameter    ap_ST_fsm_state101 = 107'd38685626227668133590597632;
parameter    ap_ST_fsm_state102 = 107'd77371252455336267181195264;
parameter    ap_ST_fsm_state103 = 107'd154742504910672534362390528;
parameter    ap_ST_fsm_state104 = 107'd309485009821345068724781056;
parameter    ap_ST_fsm_state105 = 107'd618970019642690137449562112;
parameter    ap_ST_fsm_pp4_stage0 = 107'd1237940039285380274899124224;
parameter    ap_ST_fsm_pp4_stage1 = 107'd2475880078570760549798248448;
parameter    ap_ST_fsm_state115 = 107'd4951760157141521099596496896;
parameter    ap_ST_fsm_state116 = 107'd9903520314283042199192993792;
parameter    ap_ST_fsm_pp5_stage0 = 107'd19807040628566084398385987584;
parameter    ap_ST_fsm_state120 = 107'd39614081257132168796771975168;
parameter    ap_ST_fsm_pp6_stage0 = 107'd79228162514264337593543950336;
parameter    ap_ST_fsm_pp6_stage1 = 107'd158456325028528675187087900672;
parameter    ap_ST_fsm_pp6_stage2 = 107'd316912650057057350374175801344;
parameter    ap_ST_fsm_pp6_stage3 = 107'd633825300114114700748351602688;
parameter    ap_ST_fsm_pp6_stage4 = 107'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state154 = 107'd2535301200456458802993406410752;
parameter    ap_ST_fsm_pp7_stage0 = 107'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state174 = 107'd10141204801825835211973625643008;
parameter    ap_ST_fsm_pp8_stage0 = 107'd20282409603651670423947251286016;
parameter    ap_ST_fsm_pp8_stage1 = 107'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state178 = 107'd81129638414606681695789005144064;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 4;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_S_AXI_INPUT_DATA_WIDTH = 32;
parameter    C_S_AXI_INPUT_ADDR_WIDTH = 18;
parameter    C_S_AXI_OUTPUT_DATA_WIDTH = 32;
parameter    C_S_AXI_OUTPUT_ADDR_WIDTH = 14;
parameter    C_S_AXI_PARAMETER_DATA_WIDTH = 32;
parameter    C_S_AXI_PARAMETER_ADDR_WIDTH = 16;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_INPUT_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_OUTPUT_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_PARAMETER_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input   s_axi_CONTROL_AWVALID;
output   s_axi_CONTROL_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_CONTROL_AWADDR;
input   s_axi_CONTROL_WVALID;
output   s_axi_CONTROL_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_CONTROL_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_CONTROL_WSTRB;
input   s_axi_CONTROL_ARVALID;
output   s_axi_CONTROL_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_CONTROL_ARADDR;
output   s_axi_CONTROL_RVALID;
input   s_axi_CONTROL_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_CONTROL_RDATA;
output  [1:0] s_axi_CONTROL_RRESP;
output   s_axi_CONTROL_BVALID;
input   s_axi_CONTROL_BREADY;
output  [1:0] s_axi_CONTROL_BRESP;
output   interrupt;
input   s_axi_INPUT_AWVALID;
output   s_axi_INPUT_AWREADY;
input  [C_S_AXI_INPUT_ADDR_WIDTH - 1:0] s_axi_INPUT_AWADDR;
input   s_axi_INPUT_WVALID;
output   s_axi_INPUT_WREADY;
input  [C_S_AXI_INPUT_DATA_WIDTH - 1:0] s_axi_INPUT_WDATA;
input  [C_S_AXI_INPUT_WSTRB_WIDTH - 1:0] s_axi_INPUT_WSTRB;
input   s_axi_INPUT_ARVALID;
output   s_axi_INPUT_ARREADY;
input  [C_S_AXI_INPUT_ADDR_WIDTH - 1:0] s_axi_INPUT_ARADDR;
output   s_axi_INPUT_RVALID;
input   s_axi_INPUT_RREADY;
output  [C_S_AXI_INPUT_DATA_WIDTH - 1:0] s_axi_INPUT_RDATA;
output  [1:0] s_axi_INPUT_RRESP;
output   s_axi_INPUT_BVALID;
input   s_axi_INPUT_BREADY;
output  [1:0] s_axi_INPUT_BRESP;
input   s_axi_OUTPUT_AWVALID;
output   s_axi_OUTPUT_AWREADY;
input  [C_S_AXI_OUTPUT_ADDR_WIDTH - 1:0] s_axi_OUTPUT_AWADDR;
input   s_axi_OUTPUT_WVALID;
output   s_axi_OUTPUT_WREADY;
input  [C_S_AXI_OUTPUT_DATA_WIDTH - 1:0] s_axi_OUTPUT_WDATA;
input  [C_S_AXI_OUTPUT_WSTRB_WIDTH - 1:0] s_axi_OUTPUT_WSTRB;
input   s_axi_OUTPUT_ARVALID;
output   s_axi_OUTPUT_ARREADY;
input  [C_S_AXI_OUTPUT_ADDR_WIDTH - 1:0] s_axi_OUTPUT_ARADDR;
output   s_axi_OUTPUT_RVALID;
input   s_axi_OUTPUT_RREADY;
output  [C_S_AXI_OUTPUT_DATA_WIDTH - 1:0] s_axi_OUTPUT_RDATA;
output  [1:0] s_axi_OUTPUT_RRESP;
output   s_axi_OUTPUT_BVALID;
input   s_axi_OUTPUT_BREADY;
output  [1:0] s_axi_OUTPUT_BRESP;
input   s_axi_parameter_AWVALID;
output   s_axi_parameter_AWREADY;
input  [C_S_AXI_PARAMETER_ADDR_WIDTH - 1:0] s_axi_parameter_AWADDR;
input   s_axi_parameter_WVALID;
output   s_axi_parameter_WREADY;
input  [C_S_AXI_PARAMETER_DATA_WIDTH - 1:0] s_axi_parameter_WDATA;
input  [C_S_AXI_PARAMETER_WSTRB_WIDTH - 1:0] s_axi_parameter_WSTRB;
input   s_axi_parameter_ARVALID;
output   s_axi_parameter_ARREADY;
input  [C_S_AXI_PARAMETER_ADDR_WIDTH - 1:0] s_axi_parameter_ARADDR;
output   s_axi_parameter_RVALID;
input   s_axi_parameter_RREADY;
output  [C_S_AXI_PARAMETER_DATA_WIDTH - 1:0] s_axi_parameter_RDATA;
output  [1:0] s_axi_parameter_RRESP;
output   s_axi_parameter_BVALID;
input   s_axi_parameter_BREADY;
output  [1:0] s_axi_parameter_BRESP;

reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [106:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
reg   [14:0] mem_block1_dense_address0;
reg    mem_block1_dense_ce0;
reg    mem_block1_dense_we0;
reg   [31:0] mem_block1_dense_d0;
wire   [31:0] mem_block1_dense_q0;
wire   [11:0] bd1_address0;
reg    bd1_ce0;
wire   [31:0] bd1_q0;
wire   [11:0] bd2_address0;
reg    bd2_ce0;
wire   [31:0] bd2_q0;
wire   [9:0] bd3_address0;
reg    bd3_ce0;
wire   [31:0] bd3_q0;
wire   [9:0] class_address0;
reg    class_ce0;
reg    class_we0;
wire   [31:0] class_d0;
wire   [9:0] result_address0;
reg    result_ce0;
reg    result_we0;
reg   [12:0] i_1_reg_359;
reg   [12:0] i_4_reg_417;
reg   [9:0] i_7_reg_475;
reg   [9:0] i_8_reg_486;
reg   [31:0] max_val1_reg_497;
reg   [9:0] i_9_reg_507;
reg   [31:0] sum3_reg_518;
reg   [9:0] i_s_reg_530;
reg   [9:0] i_10_reg_541;
wire   [63:0] grp_fu_589_p1;
reg   [63:0] reg_597;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state45;
wire    ap_CS_fsm_state85;
wire   [63:0] grp_fu_567_p1;
reg   [63:0] reg_602;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_pp6_stage2;
wire    ap_block_state123_pp6_stage2_iter0;
wire    ap_block_state128_pp6_stage2_iter1;
wire    ap_block_state133_pp6_stage2_iter2;
wire    ap_block_state138_pp6_stage2_iter3;
wire    ap_block_state143_pp6_stage2_iter4;
wire    ap_block_state148_pp6_stage2_iter5;
wire    ap_block_state153_pp6_stage2_iter6;
wire    ap_block_pp6_stage2_11001;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state48;
wire    ap_CS_fsm_state60;
wire    ap_CS_fsm_state87;
wire    ap_CS_fsm_state99;
reg    ap_enable_reg_pp6_iter1;
reg   [0:0] exitcond2_reg_1440;
reg   [0:0] ap_reg_pp6_iter1_exitcond2_reg_1440;
wire   [63:0] grp_fu_584_p2;
reg   [63:0] reg_609;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state54;
wire    ap_CS_fsm_state93;
wire   [63:0] grp_fu_580_p2;
reg   [63:0] reg_615;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state65;
wire    ap_CS_fsm_state104;
wire   [31:0] grp_fu_564_p1;
reg   [31:0] reg_620;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_pp6_stage1;
wire    ap_block_state122_pp6_stage1_iter0;
wire    ap_block_state127_pp6_stage1_iter1;
wire    ap_block_state132_pp6_stage1_iter2;
wire    ap_block_state137_pp6_stage1_iter3;
wire    ap_block_state142_pp6_stage1_iter4;
wire    ap_block_state147_pp6_stage1_iter5;
wire    ap_block_state152_pp6_stage1_iter6;
wire    ap_block_pp6_stage1_11001;
wire    ap_CS_fsm_state66;
wire    ap_CS_fsm_state105;
reg    ap_enable_reg_pp6_iter5;
reg   [0:0] ap_reg_pp6_iter5_exitcond2_reg_1440;
wire   [31:0] mem_block2_dense_q0;
reg   [31:0] reg_629;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state29_pp0_stage1_iter0;
wire    ap_block_state31_pp0_stage1_iter1;
wire    ap_block_state33_pp0_stage1_iter2;
wire    ap_block_state35_pp0_stage1_iter3;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] exitcond12_reg_1245;
wire    ap_CS_fsm_pp4_stage1;
wire    ap_block_state107_pp4_stage1_iter0;
wire    ap_block_state109_pp4_stage1_iter1;
wire    ap_block_state111_pp4_stage1_iter2;
wire    ap_block_state113_pp4_stage1_iter3;
wire    ap_block_pp4_stage1_11001;
wire    ap_block_state155_pp7_stage0_iter0;
wire    ap_block_state156_pp7_stage0_iter1;
wire    ap_block_state157_pp7_stage0_iter2;
wire    ap_block_state158_pp7_stage0_iter3;
wire    ap_block_state159_pp7_stage0_iter4;
wire    ap_block_state160_pp7_stage0_iter5;
wire    ap_block_state161_pp7_stage0_iter6;
wire    ap_block_state162_pp7_stage0_iter7;
wire    ap_block_state163_pp7_stage0_iter8;
wire    ap_block_state164_pp7_stage0_iter9;
wire    ap_block_state165_pp7_stage0_iter10;
wire    ap_block_state166_pp7_stage0_iter11;
wire    ap_block_state167_pp7_stage0_iter12;
wire    ap_block_state168_pp7_stage0_iter13;
wire    ap_block_state169_pp7_stage0_iter14;
wire    ap_block_state170_pp7_stage0_iter15;
wire    ap_block_state171_pp7_stage0_iter16;
wire    ap_block_state172_pp7_stage0_iter17;
wire    ap_block_state173_pp7_stage0_iter18;
wire    ap_block_pp7_stage0_11001;
wire   [31:0] mem_block2_dense_q1;
wire    ap_CS_fsm_state47;
reg    ap_enable_reg_pp4_iter0;
reg   [0:0] exitcond4_reg_1379;
wire    ap_CS_fsm_state116;
reg    ap_enable_reg_pp6_iter0;
wire    ap_CS_fsm_pp7_stage0;
reg    ap_enable_reg_pp7_iter1;
reg   [0:0] exitcond1_reg_1465;
wire    ap_CS_fsm_pp8_stage1;
reg    ap_enable_reg_pp8_iter0;
wire    ap_block_state176_pp8_stage1_iter0;
wire    ap_block_pp8_stage1_11001;
reg   [0:0] exitcond_reg_1485;
wire   [31:0] grp_fu_553_p2;
reg   [31:0] reg_640;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter3;
wire    ap_block_state28_pp0_stage0_iter0;
wire    ap_block_state30_pp0_stage0_iter1;
wire    ap_block_state32_pp0_stage0_iter2;
wire    ap_block_state34_pp0_stage0_iter3;
wire    ap_block_state36_pp0_stage0_iter4;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] ap_reg_pp0_iter2_exitcond12_reg_1245;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter3;
wire    ap_block_state67_pp2_stage0_iter0;
wire    ap_block_state69_pp2_stage0_iter1;
wire    ap_block_state71_pp2_stage0_iter2;
wire    ap_block_state73_pp2_stage0_iter3;
wire    ap_block_state75_pp2_stage0_iter4;
wire    ap_block_pp2_stage0_11001;
reg   [0:0] exitcond8_reg_1310;
reg   [0:0] ap_reg_pp2_iter2_exitcond8_reg_1310;
wire    ap_CS_fsm_pp4_stage0;
reg    ap_enable_reg_pp4_iter3;
wire    ap_block_state106_pp4_stage0_iter0;
wire    ap_block_state108_pp4_stage0_iter1;
wire    ap_block_state110_pp4_stage0_iter2;
wire    ap_block_state112_pp4_stage0_iter3;
wire    ap_block_state114_pp4_stage0_iter4;
wire    ap_block_pp4_stage0_11001;
reg   [0:0] ap_reg_pp4_iter2_exitcond4_reg_1379;
wire   [0:0] exitcond14_fu_650_p2;
wire    ap_CS_fsm_state2;
wire   [12:0] i_11_fu_656_p2;
reg   [12:0] i_11_reg_1222;
wire   [31:0] tmp_cast_fu_662_p1;
wire   [14:0] j_3_fu_673_p2;
reg   [14:0] j_3_reg_1235;
wire    ap_CS_fsm_state8;
wire   [0:0] exitcond13_fu_667_p2;
wire   [0:0] exitcond12_fu_689_p2;
reg   [0:0] ap_reg_pp0_iter1_exitcond12_reg_1245;
reg   [0:0] ap_reg_pp0_iter3_exitcond12_reg_1245;
wire   [12:0] i_12_fu_695_p2;
reg   [12:0] i_12_reg_1249;
reg   [14:0] mem_block2_dense_add_1_reg_1259;
reg   [14:0] ap_reg_pp0_iter1_mem_block2_dense_add_1_reg_1259;
reg   [14:0] ap_reg_pp0_iter2_mem_block2_dense_add_1_reg_1259;
reg   [14:0] ap_reg_pp0_iter3_mem_block2_dense_add_1_reg_1259;
reg   [31:0] bd1_load_reg_1265;
wire   [31:0] storemerge_fu_749_p3;
reg   [31:0] storemerge_reg_1270;
wire   [14:0] i_13_fu_763_p2;
wire    ap_CS_fsm_state38;
wire   [0:0] exitcond10_fu_778_p2;
wire    ap_CS_fsm_state40;
wire   [12:0] i_14_fu_784_p2;
reg   [12:0] i_14_reg_1287;
wire   [31:0] tmp_12_cast_fu_790_p1;
wire   [12:0] j_4_fu_801_p2;
reg   [12:0] j_4_reg_1300;
wire    ap_CS_fsm_state46;
wire   [0:0] exitcond9_fu_795_p2;
wire   [0:0] exitcond8_fu_817_p2;
reg   [0:0] ap_reg_pp2_iter1_exitcond8_reg_1310;
reg   [0:0] ap_reg_pp2_iter3_exitcond8_reg_1310;
reg   [0:0] ap_reg_pp2_iter4_exitcond8_reg_1310;
wire   [12:0] i_15_fu_823_p2;
reg   [12:0] i_15_reg_1314;
reg    ap_enable_reg_pp2_iter0;
reg   [14:0] mem_block1_dense_add_3_reg_1324;
reg   [14:0] ap_reg_pp2_iter1_mem_block1_dense_add_3_reg_1324;
reg   [14:0] ap_reg_pp2_iter2_mem_block1_dense_add_3_reg_1324;
reg   [14:0] ap_reg_pp2_iter3_mem_block1_dense_add_3_reg_1324;
reg   [14:0] ap_reg_pp2_iter4_mem_block1_dense_add_3_reg_1324;
reg   [31:0] bd2_load_reg_1329;
wire    ap_CS_fsm_pp2_stage1;
wire    ap_block_state68_pp2_stage1_iter0;
wire    ap_block_state70_pp2_stage1_iter1;
wire    ap_block_state72_pp2_stage1_iter2;
wire    ap_block_state74_pp2_stage1_iter3;
wire    ap_block_state76_pp2_stage1_iter4;
wire    ap_block_pp2_stage1_11001;
reg   [31:0] mem_block1_dense_loa_1_reg_1334;
wire   [31:0] storemerge1_fu_877_p3;
reg   [31:0] storemerge1_reg_1339;
wire   [14:0] i_16_fu_891_p2;
wire    ap_CS_fsm_state78;
wire   [0:0] exitcond6_fu_906_p2;
wire    ap_CS_fsm_state80;
wire   [9:0] i_17_fu_912_p2;
reg   [9:0] i_17_reg_1356;
wire   [31:0] tmp_25_cast_fu_918_p1;
wire   [12:0] j_5_fu_929_p2;
reg   [12:0] j_5_reg_1369;
wire    ap_CS_fsm_state86;
wire   [0:0] exitcond5_fu_923_p2;
wire   [0:0] exitcond4_fu_945_p2;
reg   [0:0] ap_reg_pp4_iter1_exitcond4_reg_1379;
reg   [0:0] ap_reg_pp4_iter3_exitcond4_reg_1379;
wire   [9:0] i_18_fu_951_p2;
reg   [9:0] i_18_reg_1383;
reg   [14:0] mem_block2_dense_add_5_reg_1393;
reg   [14:0] ap_reg_pp4_iter1_mem_block2_dense_add_5_reg_1393;
reg   [14:0] ap_reg_pp4_iter2_mem_block2_dense_add_5_reg_1393;
reg   [14:0] ap_reg_pp4_iter3_mem_block2_dense_add_5_reg_1393;
reg   [31:0] bd3_load_reg_1399;
wire   [31:0] storemerge2_fu_1005_p3;
reg   [31:0] storemerge2_reg_1404;
wire    ap_CS_fsm_state115;
wire   [0:0] exitcond3_fu_1013_p2;
reg   [0:0] exitcond3_reg_1414;
wire    ap_CS_fsm_pp5_stage0;
wire    ap_block_state117_pp5_stage0_iter0;
wire    ap_block_state118_pp5_stage0_iter1;
wire    ap_block_state119_pp5_stage0_iter2;
wire    ap_block_pp5_stage0_11001;
reg   [0:0] ap_reg_pp5_iter1_exitcond3_reg_1414;
wire   [9:0] i_19_fu_1024_p2;
reg    ap_enable_reg_pp5_iter0;
reg   [31:0] max_val_2_reg_1428;
reg    ap_enable_reg_pp5_iter1;
wire   [31:0] max_val_1_fu_1113_p3;
reg    ap_enable_reg_pp5_iter2;
wire   [0:0] exitcond2_fu_1120_p2;
wire    ap_CS_fsm_pp6_stage0;
wire    ap_block_state121_pp6_stage0_iter0;
wire    ap_block_state126_pp6_stage0_iter1;
wire    ap_block_state131_pp6_stage0_iter2;
wire    ap_block_state136_pp6_stage0_iter3;
wire    ap_block_state141_pp6_stage0_iter4;
wire    ap_block_state146_pp6_stage0_iter5;
wire    ap_block_state151_pp6_stage0_iter6;
wire    ap_block_pp6_stage0_11001;
reg   [0:0] ap_reg_pp6_iter2_exitcond2_reg_1440;
reg   [0:0] ap_reg_pp6_iter3_exitcond2_reg_1440;
reg   [0:0] ap_reg_pp6_iter4_exitcond2_reg_1440;
reg   [0:0] ap_reg_pp6_iter6_exitcond2_reg_1440;
wire   [9:0] i_20_fu_1126_p2;
reg   [9:0] i_20_reg_1444;
reg   [14:0] mem_block2_dense_add_8_reg_1449;
reg   [14:0] ap_reg_pp6_iter1_mem_block2_dense_add_8_reg_1449;
reg   [14:0] ap_reg_pp6_iter2_mem_block2_dense_add_8_reg_1449;
reg   [14:0] ap_reg_pp6_iter3_mem_block2_dense_add_8_reg_1449;
reg   [14:0] ap_reg_pp6_iter4_mem_block2_dense_add_8_reg_1449;
reg   [14:0] ap_reg_pp6_iter5_mem_block2_dense_add_8_reg_1449;
wire   [63:0] grp_fu_592_p2;
reg   [63:0] tmp_42_reg_1455;
reg    ap_enable_reg_pp6_iter6;
wire   [0:0] exitcond1_fu_1137_p2;
reg   [0:0] ap_reg_pp7_iter1_exitcond1_reg_1465;
reg   [0:0] ap_reg_pp7_iter2_exitcond1_reg_1465;
reg   [0:0] ap_reg_pp7_iter3_exitcond1_reg_1465;
reg   [0:0] ap_reg_pp7_iter4_exitcond1_reg_1465;
reg   [0:0] ap_reg_pp7_iter5_exitcond1_reg_1465;
reg   [0:0] ap_reg_pp7_iter6_exitcond1_reg_1465;
reg   [0:0] ap_reg_pp7_iter7_exitcond1_reg_1465;
reg   [0:0] ap_reg_pp7_iter8_exitcond1_reg_1465;
reg   [0:0] ap_reg_pp7_iter9_exitcond1_reg_1465;
reg   [0:0] ap_reg_pp7_iter10_exitcond1_reg_1465;
reg   [0:0] ap_reg_pp7_iter11_exitcond1_reg_1465;
reg   [0:0] ap_reg_pp7_iter12_exitcond1_reg_1465;
reg   [0:0] ap_reg_pp7_iter13_exitcond1_reg_1465;
reg   [0:0] ap_reg_pp7_iter14_exitcond1_reg_1465;
reg   [0:0] ap_reg_pp7_iter15_exitcond1_reg_1465;
reg   [0:0] ap_reg_pp7_iter16_exitcond1_reg_1465;
reg   [0:0] ap_reg_pp7_iter17_exitcond1_reg_1465;
wire   [9:0] i_21_fu_1143_p2;
reg    ap_enable_reg_pp7_iter0;
reg   [14:0] mem_block2_dense_add_9_reg_1474;
reg   [14:0] ap_reg_pp7_iter1_mem_block2_dense_add_9_reg_1474;
reg   [14:0] ap_reg_pp7_iter2_mem_block2_dense_add_9_reg_1474;
reg   [14:0] ap_reg_pp7_iter3_mem_block2_dense_add_9_reg_1474;
reg   [14:0] ap_reg_pp7_iter4_mem_block2_dense_add_9_reg_1474;
reg   [14:0] ap_reg_pp7_iter5_mem_block2_dense_add_9_reg_1474;
reg   [14:0] ap_reg_pp7_iter6_mem_block2_dense_add_9_reg_1474;
reg   [14:0] ap_reg_pp7_iter7_mem_block2_dense_add_9_reg_1474;
reg   [14:0] ap_reg_pp7_iter8_mem_block2_dense_add_9_reg_1474;
reg   [14:0] ap_reg_pp7_iter9_mem_block2_dense_add_9_reg_1474;
reg   [14:0] ap_reg_pp7_iter10_mem_block2_dense_add_9_reg_1474;
reg   [14:0] ap_reg_pp7_iter11_mem_block2_dense_add_9_reg_1474;
reg   [14:0] ap_reg_pp7_iter12_mem_block2_dense_add_9_reg_1474;
reg   [14:0] ap_reg_pp7_iter13_mem_block2_dense_add_9_reg_1474;
reg   [14:0] ap_reg_pp7_iter14_mem_block2_dense_add_9_reg_1474;
reg   [14:0] ap_reg_pp7_iter15_mem_block2_dense_add_9_reg_1474;
reg   [14:0] ap_reg_pp7_iter16_mem_block2_dense_add_9_reg_1474;
reg   [14:0] ap_reg_pp7_iter17_mem_block2_dense_add_9_reg_1474;
wire   [31:0] grp_fu_559_p2;
reg   [31:0] tmp_45_reg_1480;
wire   [0:0] exitcond_fu_1154_p2;
wire    ap_CS_fsm_pp8_stage0;
wire    ap_block_state175_pp8_stage0_iter0;
wire    ap_block_state177_pp8_stage0_iter1;
wire    ap_block_pp8_stage0_11001;
wire   [9:0] counter_fu_1160_p2;
reg   [9:0] counter_reg_1489;
wire   [63:0] tmp_46_fu_1166_p1;
reg   [63:0] tmp_46_reg_1494;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state28;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage1_subdone;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter4;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state67;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_pp2_stage1_subdone;
reg    ap_enable_reg_pp2_iter2;
reg    ap_enable_reg_pp2_iter4;
wire    ap_block_pp4_stage0_subdone;
reg    ap_condition_pp4_exit_iter0_state106;
reg    ap_enable_reg_pp4_iter1;
wire    ap_block_pp4_stage1_subdone;
reg    ap_enable_reg_pp4_iter2;
reg    ap_enable_reg_pp4_iter4;
wire    ap_block_pp5_stage0_subdone;
reg    ap_condition_pp5_exit_iter0_state117;
wire    ap_CS_fsm_state120;
wire    ap_block_pp6_stage0_subdone;
reg    ap_condition_pp6_exit_iter0_state121;
wire    ap_block_state125_pp6_stage4_iter0;
wire    ap_block_state130_pp6_stage4_iter1;
wire    ap_block_state135_pp6_stage4_iter2;
wire    ap_block_state140_pp6_stage4_iter3;
wire    ap_block_state145_pp6_stage4_iter4;
wire    ap_block_state150_pp6_stage4_iter5;
wire    ap_block_pp6_stage4_subdone;
wire    ap_CS_fsm_pp6_stage4;
wire    ap_block_pp6_stage2_subdone;
reg    ap_enable_reg_pp6_iter2;
reg    ap_enable_reg_pp6_iter3;
reg    ap_enable_reg_pp6_iter4;
wire    ap_CS_fsm_state154;
wire    ap_block_pp7_stage0_subdone;
reg    ap_condition_pp7_exit_iter0_state155;
reg    ap_enable_reg_pp7_iter2;
reg    ap_enable_reg_pp7_iter3;
reg    ap_enable_reg_pp7_iter4;
reg    ap_enable_reg_pp7_iter5;
reg    ap_enable_reg_pp7_iter6;
reg    ap_enable_reg_pp7_iter7;
reg    ap_enable_reg_pp7_iter8;
reg    ap_enable_reg_pp7_iter9;
reg    ap_enable_reg_pp7_iter10;
reg    ap_enable_reg_pp7_iter11;
reg    ap_enable_reg_pp7_iter12;
reg    ap_enable_reg_pp7_iter13;
reg    ap_enable_reg_pp7_iter14;
reg    ap_enable_reg_pp7_iter15;
reg    ap_enable_reg_pp7_iter16;
reg    ap_enable_reg_pp7_iter17;
reg    ap_enable_reg_pp7_iter18;
wire    ap_CS_fsm_state174;
wire    ap_block_pp8_stage0_subdone;
reg    ap_condition_pp8_exit_iter0_state175;
reg    ap_enable_reg_pp8_iter1;
wire    ap_block_pp8_stage1_subdone;
reg   [14:0] mem_block2_dense_address0;
reg    mem_block2_dense_ce0;
reg    mem_block2_dense_we0;
reg   [31:0] mem_block2_dense_d0;
reg   [14:0] mem_block2_dense_address1;
reg    mem_block2_dense_ce1;
reg    mem_block2_dense_we1;
reg   [31:0] mem_block2_dense_d1;
reg   [12:0] i_reg_323;
reg   [14:0] j_reg_335;
reg   [31:0] sum_reg_346;
reg   [12:0] ap_phi_mux_i_1_phi_fu_363_p4;
wire    ap_block_pp0_stage0;
reg   [14:0] i_2_reg_370;
wire   [0:0] exitcond11_fu_757_p2;
wire    ap_CS_fsm_state37;
reg   [12:0] i_3_reg_381;
wire    ap_CS_fsm_state39;
reg   [12:0] j_1_reg_393;
reg   [31:0] sum1_reg_404;
reg   [12:0] ap_phi_mux_i_4_phi_fu_421_p4;
wire    ap_block_pp2_stage0;
reg   [14:0] i_5_reg_428;
wire   [0:0] exitcond7_fu_885_p2;
wire    ap_CS_fsm_state77;
reg   [9:0] i_6_reg_439;
wire    ap_CS_fsm_state79;
reg   [12:0] j_2_reg_451;
reg   [31:0] sum2_reg_462;
reg   [9:0] ap_phi_mux_i_7_phi_fu_479_p4;
wire    ap_block_pp4_stage0;
reg   [9:0] ap_phi_mux_i_9_phi_fu_511_p4;
wire    ap_block_pp6_stage0;
reg   [9:0] ap_phi_mux_i_10_phi_fu_545_p4;
wire    ap_block_pp8_stage0;
wire   [63:0] tmp_7_fu_679_p1;
wire   [63:0] tmp_5_fu_684_p1;
wire   [63:0] tmp_2_fu_701_p1;
wire   [63:0] tmp_11_fu_769_p1;
wire   [63:0] tmp_18_fu_807_p1;
wire   [63:0] tmp_17_fu_812_p1;
wire   [63:0] tmp_14_fu_829_p1;
wire   [63:0] tmp_24_fu_897_p1;
wire   [63:0] tmp_31_fu_935_p1;
wire   [63:0] tmp_30_fu_940_p1;
wire   [63:0] tmp_27_fu_957_p1;
wire   [63:0] tmp_37_fu_1019_p1;
wire    ap_block_pp5_stage0;
wire   [63:0] tmp_39_fu_1132_p1;
wire   [63:0] tmp_44_fu_1149_p1;
wire    ap_block_pp7_stage0;
wire   [0:0] tmp_77_fu_1212_p2;
wire    ap_block_pp2_stage1;
wire    ap_block_pp6_stage2;
reg   [31:0] grp_fu_553_p0;
reg   [31:0] grp_fu_553_p1;
wire    ap_CS_fsm_pp6_stage3;
wire    ap_block_pp6_stage3;
reg   [63:0] grp_fu_564_p0;
wire    ap_block_pp6_stage1;
reg   [31:0] grp_fu_567_p0;
reg   [31:0] grp_fu_574_p0;
reg   [31:0] grp_fu_574_p1;
wire    ap_block_pp0_stage1;
wire    ap_block_pp4_stage1;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state61;
wire    ap_CS_fsm_state100;
reg   [63:0] grp_fu_584_p0;
reg   [63:0] grp_fu_584_p1;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state49;
wire    ap_CS_fsm_state55;
wire    ap_CS_fsm_state88;
wire    ap_CS_fsm_state94;
reg   [31:0] grp_fu_589_p0;
wire   [1:0] tmp_12_fu_646_p1;
wire   [31:0] tmp_3_to_int_fu_707_p1;
wire   [7:0] tmp_fu_711_p4;
wire   [22:0] tmp_49_fu_721_p1;
wire   [0:0] notrhs_fu_731_p2;
wire   [0:0] notlhs_fu_725_p2;
wire   [0:0] tmp_16_fu_737_p2;
wire   [0:0] grp_fu_574_p2;
wire   [0:0] tmp_29_fu_743_p2;
wire   [1:0] tmp_60_fu_774_p1;
wire   [31:0] tmp_15_to_int_fu_835_p1;
wire   [7:0] tmp_48_fu_839_p4;
wire   [22:0] tmp_65_fu_849_p1;
wire   [0:0] notrhs1_fu_859_p2;
wire   [0:0] notlhs1_fu_853_p2;
wire   [0:0] tmp_50_fu_865_p2;
wire   [0:0] tmp_58_fu_871_p2;
wire   [1:0] tmp_67_fu_902_p1;
wire   [31:0] tmp_28_to_int_fu_963_p1;
wire   [7:0] tmp_59_fu_967_p4;
wire   [22:0] tmp_74_fu_977_p1;
wire   [0:0] notrhs2_fu_987_p2;
wire   [0:0] notlhs2_fu_981_p2;
wire   [0:0] tmp_61_fu_993_p2;
wire   [0:0] tmp_63_fu_999_p2;
wire   [31:0] max_val_2_to_int_fu_1030_p1;
wire   [31:0] max_val1_to_int_fu_1047_p1;
wire   [7:0] tmp_64_fu_1033_p4;
wire   [22:0] tmp_78_fu_1043_p1;
wire   [0:0] notrhs3_fu_1071_p2;
wire   [0:0] notlhs3_fu_1065_p2;
wire   [7:0] tmp_66_fu_1051_p4;
wire   [22:0] tmp_79_fu_1061_p1;
wire   [0:0] notrhs4_fu_1089_p2;
wire   [0:0] notlhs4_fu_1083_p2;
wire   [0:0] tmp_68_fu_1077_p2;
wire   [0:0] tmp_69_fu_1095_p2;
wire   [0:0] tmp_70_fu_1101_p2;
wire   [0:0] tmp_72_fu_1107_p2;
wire   [31:0] mem_block2_dense_loa_6_fu_1176_p1;
wire   [7:0] tmp_73_fu_1180_p4;
wire   [22:0] tmp_80_fu_1190_p1;
wire   [0:0] notrhs5_fu_1200_p2;
wire   [0:0] notlhs5_fu_1194_p2;
wire   [0:0] tmp_75_fu_1206_p2;
reg   [1:0] grp_fu_553_opcode;
wire    ap_block_pp0_stage0_00001;
wire    ap_block_pp2_stage0_00001;
wire    ap_block_pp4_stage0_00001;
wire    ap_block_state124_pp6_stage3_iter0;
wire    ap_block_state129_pp6_stage3_iter1;
wire    ap_block_state134_pp6_stage3_iter2;
wire    ap_block_state139_pp6_stage3_iter3;
wire    ap_block_state144_pp6_stage3_iter4;
wire    ap_block_state149_pp6_stage3_iter5;
wire    ap_block_pp6_stage3_00001;
wire    ap_block_pp6_stage2_00001;
reg   [4:0] grp_fu_574_opcode;
wire    ap_block_pp0_stage1_00001;
wire    ap_block_pp4_stage1_00001;
wire    ap_block_pp5_stage0_00001;
wire    ap_block_pp8_stage0_00001;
wire    ap_CS_fsm_state178;
reg   [106:0] ap_NS_fsm;
wire    ap_block_pp6_stage1_subdone;
wire    ap_block_pp6_stage3_subdone;
wire    ap_block_pp6_stage3_11001;
wire    ap_block_pp6_stage4_11001;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp4;
wire    ap_enable_pp4;
reg    ap_idle_pp5;
wire    ap_enable_pp5;
reg    ap_idle_pp6;
wire    ap_enable_pp6;
reg    ap_idle_pp7;
wire    ap_enable_pp7;
reg    ap_idle_pp8;
wire    ap_enable_pp8;

// power-on initialization
initial begin
#0 ap_CS_fsm = 107'd1;
#0 ap_enable_reg_pp6_iter1 = 1'b0;
#0 ap_enable_reg_pp6_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp6_iter0 = 1'b0;
#0 ap_enable_reg_pp7_iter1 = 1'b0;
#0 ap_enable_reg_pp8_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp2_iter3 = 1'b0;
#0 ap_enable_reg_pp4_iter3 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp5_iter0 = 1'b0;
#0 ap_enable_reg_pp5_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter2 = 1'b0;
#0 ap_enable_reg_pp6_iter6 = 1'b0;
#0 ap_enable_reg_pp7_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter4 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp4_iter2 = 1'b0;
#0 ap_enable_reg_pp4_iter4 = 1'b0;
#0 ap_enable_reg_pp6_iter2 = 1'b0;
#0 ap_enable_reg_pp6_iter3 = 1'b0;
#0 ap_enable_reg_pp6_iter4 = 1'b0;
#0 ap_enable_reg_pp7_iter2 = 1'b0;
#0 ap_enable_reg_pp7_iter3 = 1'b0;
#0 ap_enable_reg_pp7_iter4 = 1'b0;
#0 ap_enable_reg_pp7_iter5 = 1'b0;
#0 ap_enable_reg_pp7_iter6 = 1'b0;
#0 ap_enable_reg_pp7_iter7 = 1'b0;
#0 ap_enable_reg_pp7_iter8 = 1'b0;
#0 ap_enable_reg_pp7_iter9 = 1'b0;
#0 ap_enable_reg_pp7_iter10 = 1'b0;
#0 ap_enable_reg_pp7_iter11 = 1'b0;
#0 ap_enable_reg_pp7_iter12 = 1'b0;
#0 ap_enable_reg_pp7_iter13 = 1'b0;
#0 ap_enable_reg_pp7_iter14 = 1'b0;
#0 ap_enable_reg_pp7_iter15 = 1'b0;
#0 ap_enable_reg_pp7_iter16 = 1'b0;
#0 ap_enable_reg_pp7_iter17 = 1'b0;
#0 ap_enable_reg_pp7_iter18 = 1'b0;
#0 ap_enable_reg_pp8_iter1 = 1'b0;
end

dense_reluflatten_softmax_CONTROL_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
dense_reluflatten_softmax_CONTROL_s_axi_U(
    .AWVALID(s_axi_CONTROL_AWVALID),
    .AWREADY(s_axi_CONTROL_AWREADY),
    .AWADDR(s_axi_CONTROL_AWADDR),
    .WVALID(s_axi_CONTROL_WVALID),
    .WREADY(s_axi_CONTROL_WREADY),
    .WDATA(s_axi_CONTROL_WDATA),
    .WSTRB(s_axi_CONTROL_WSTRB),
    .ARVALID(s_axi_CONTROL_ARVALID),
    .ARREADY(s_axi_CONTROL_ARREADY),
    .ARADDR(s_axi_CONTROL_ARADDR),
    .RVALID(s_axi_CONTROL_RVALID),
    .RREADY(s_axi_CONTROL_RREADY),
    .RDATA(s_axi_CONTROL_RDATA),
    .RRESP(s_axi_CONTROL_RRESP),
    .BVALID(s_axi_CONTROL_BVALID),
    .BREADY(s_axi_CONTROL_BREADY),
    .BRESP(s_axi_CONTROL_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

dense_reluflatten_softmax_INPUT_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_INPUT_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_INPUT_DATA_WIDTH ))
dense_reluflatten_softmax_INPUT_s_axi_U(
    .AWVALID(s_axi_INPUT_AWVALID),
    .AWREADY(s_axi_INPUT_AWREADY),
    .AWADDR(s_axi_INPUT_AWADDR),
    .WVALID(s_axi_INPUT_WVALID),
    .WREADY(s_axi_INPUT_WREADY),
    .WDATA(s_axi_INPUT_WDATA),
    .WSTRB(s_axi_INPUT_WSTRB),
    .ARVALID(s_axi_INPUT_ARVALID),
    .ARREADY(s_axi_INPUT_ARREADY),
    .ARADDR(s_axi_INPUT_ARADDR),
    .RVALID(s_axi_INPUT_RVALID),
    .RREADY(s_axi_INPUT_RREADY),
    .RDATA(s_axi_INPUT_RDATA),
    .RRESP(s_axi_INPUT_RRESP),
    .BVALID(s_axi_INPUT_BVALID),
    .BREADY(s_axi_INPUT_BREADY),
    .BRESP(s_axi_INPUT_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .mem_block1_dense_address0(mem_block1_dense_address0),
    .mem_block1_dense_ce0(mem_block1_dense_ce0),
    .mem_block1_dense_we0(mem_block1_dense_we0),
    .mem_block1_dense_d0(mem_block1_dense_d0),
    .mem_block1_dense_q0(mem_block1_dense_q0)
);

dense_reluflatten_softmax_OUTPUT_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_OUTPUT_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_OUTPUT_DATA_WIDTH ))
dense_reluflatten_softmax_OUTPUT_s_axi_U(
    .AWVALID(s_axi_OUTPUT_AWVALID),
    .AWREADY(s_axi_OUTPUT_AWREADY),
    .AWADDR(s_axi_OUTPUT_AWADDR),
    .WVALID(s_axi_OUTPUT_WVALID),
    .WREADY(s_axi_OUTPUT_WREADY),
    .WDATA(s_axi_OUTPUT_WDATA),
    .WSTRB(s_axi_OUTPUT_WSTRB),
    .ARVALID(s_axi_OUTPUT_ARVALID),
    .ARREADY(s_axi_OUTPUT_ARREADY),
    .ARADDR(s_axi_OUTPUT_ARADDR),
    .RVALID(s_axi_OUTPUT_RVALID),
    .RREADY(s_axi_OUTPUT_RREADY),
    .RDATA(s_axi_OUTPUT_RDATA),
    .RRESP(s_axi_OUTPUT_RRESP),
    .BVALID(s_axi_OUTPUT_BVALID),
    .BREADY(s_axi_OUTPUT_BREADY),
    .BRESP(s_axi_OUTPUT_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .class_address0(class_address0),
    .class_ce0(class_ce0),
    .class_we0(class_we0),
    .class_d0(class_d0),
    .result_address0(result_address0),
    .result_ce0(result_ce0),
    .result_we0(result_we0),
    .result_d0(reg_629)
);

dense_reluflatten_softmax_parameter_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_PARAMETER_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_PARAMETER_DATA_WIDTH ))
dense_reluflatten_softmax_parameter_s_axi_U(
    .AWVALID(s_axi_parameter_AWVALID),
    .AWREADY(s_axi_parameter_AWREADY),
    .AWADDR(s_axi_parameter_AWADDR),
    .WVALID(s_axi_parameter_WVALID),
    .WREADY(s_axi_parameter_WREADY),
    .WDATA(s_axi_parameter_WDATA),
    .WSTRB(s_axi_parameter_WSTRB),
    .ARVALID(s_axi_parameter_ARVALID),
    .ARREADY(s_axi_parameter_ARREADY),
    .ARADDR(s_axi_parameter_ARADDR),
    .RVALID(s_axi_parameter_RVALID),
    .RREADY(s_axi_parameter_RREADY),
    .RDATA(s_axi_parameter_RDATA),
    .RRESP(s_axi_parameter_RRESP),
    .BVALID(s_axi_parameter_BVALID),
    .BREADY(s_axi_parameter_BREADY),
    .BRESP(s_axi_parameter_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .bd1_address0(bd1_address0),
    .bd1_ce0(bd1_ce0),
    .bd1_q0(bd1_q0),
    .bd2_address0(bd2_address0),
    .bd2_ce0(bd2_ce0),
    .bd2_q0(bd2_q0),
    .bd3_address0(bd3_address0),
    .bd3_ce0(bd3_ce0),
    .bd3_q0(bd3_q0)
);

dense_reluflattenbkb #(
    .DataWidth( 32 ),
    .AddressRange( 25088 ),
    .AddressWidth( 15 ))
mem_block2_dense_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(mem_block2_dense_address0),
    .ce0(mem_block2_dense_ce0),
    .we0(mem_block2_dense_we0),
    .d0(mem_block2_dense_d0),
    .q0(mem_block2_dense_q0),
    .address1(mem_block2_dense_address1),
    .ce1(mem_block2_dense_ce1),
    .we1(mem_block2_dense_we1),
    .d1(mem_block2_dense_d1),
    .q1(mem_block2_dense_q1)
);

dense_reluflattencud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dense_reluflattencud_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_553_p0),
    .din1(grp_fu_553_p1),
    .opcode(grp_fu_553_opcode),
    .ce(1'b1),
    .dout(grp_fu_553_p2)
);

dense_reluflattendEe #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dense_reluflattendEe_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(reg_629),
    .din1(sum3_reg_518),
    .ce(1'b1),
    .dout(grp_fu_559_p2)
);

dense_reluflatteneOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
dense_reluflatteneOg_U3(
    .din0(grp_fu_564_p0),
    .dout(grp_fu_564_p1)
);

dense_reluflattenfYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
dense_reluflattenfYi_U4(
    .din0(grp_fu_567_p0),
    .dout(grp_fu_567_p1)
);

dense_reluflatteng8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
dense_reluflatteng8j_U5(
    .din0(grp_fu_574_p0),
    .din1(grp_fu_574_p1),
    .opcode(grp_fu_574_opcode),
    .dout(grp_fu_574_p2)
);

dense_reluflattenhbi #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dense_reluflattenhbi_U6(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(reg_602),
    .din1(reg_609),
    .ce(1'b1),
    .dout(grp_fu_580_p2)
);

dense_reluflattenibs #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dense_reluflattenibs_U7(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_584_p0),
    .din1(grp_fu_584_p1),
    .ce(1'b1),
    .dout(grp_fu_584_p2)
);

dense_reluflattenjbC #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
dense_reluflattenjbC_U8(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_589_p0),
    .ce(1'b1),
    .dout(grp_fu_589_p1)
);

dense_reluflattenkbM #(
    .ID( 1 ),
    .NUM_STAGE( 18 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dense_reluflattenkbM_U9(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(64'd0),
    .din1(reg_602),
    .ce(1'b1),
    .dout(grp_fu_592_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state28) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((exitcond14_fu_650_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state28)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state28);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone)))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if (((exitcond14_fu_650_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_condition_pp2_exit_iter0_state67) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if (((exitcond10_fu_778_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state40))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_subdone))) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state67)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state67);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_subdone))) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter3 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_subdone))) begin
            ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter4 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_subdone))) begin
            ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter3;
        end else if (((exitcond10_fu_778_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state40))) begin
            ap_enable_reg_pp2_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_condition_pp4_exit_iter0_state106) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if (((exitcond6_fu_906_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state80))) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp4_stage1) & (1'b0 == ap_block_pp4_stage1_subdone))) begin
            if ((1'b1 == ap_condition_pp4_exit_iter0_state106)) begin
                ap_enable_reg_pp4_iter1 <= (1'b1 ^ ap_condition_pp4_exit_iter0_state106);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp4_stage1) & (1'b0 == ap_block_pp4_stage1_subdone))) begin
            ap_enable_reg_pp4_iter2 <= ap_enable_reg_pp4_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter3 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp4_stage1) & (1'b0 == ap_block_pp4_stage1_subdone))) begin
            ap_enable_reg_pp4_iter3 <= ap_enable_reg_pp4_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter4 <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_subdone)) | ((1'b1 == ap_CS_fsm_pp4_stage1) & (1'b0 == ap_block_pp4_stage1_subdone)))) begin
            ap_enable_reg_pp4_iter4 <= ap_enable_reg_pp4_iter3;
        end else if (((exitcond6_fu_906_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state80))) begin
            ap_enable_reg_pp4_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp5_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b1 == ap_condition_pp5_exit_iter0_state117) & (1'b0 == ap_block_pp5_stage0_subdone))) begin
            ap_enable_reg_pp5_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state116)) begin
            ap_enable_reg_pp5_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp5_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp5_exit_iter0_state117)) begin
                ap_enable_reg_pp5_iter1 <= (1'b1 ^ ap_condition_pp5_exit_iter0_state117);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp5_iter1 <= ap_enable_reg_pp5_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp5_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter2 <= ap_enable_reg_pp5_iter1;
        end else if ((1'b1 == ap_CS_fsm_state116)) begin
            ap_enable_reg_pp5_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp6_stage0) & (1'b1 == ap_condition_pp6_exit_iter0_state121) & (1'b0 == ap_block_pp6_stage0_subdone))) begin
            ap_enable_reg_pp6_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state120)) begin
            ap_enable_reg_pp6_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp6_stage4) & (1'b0 == ap_block_pp6_stage4_subdone))) begin
            if ((1'b1 == ap_condition_pp6_exit_iter0_state121)) begin
                ap_enable_reg_pp6_iter1 <= (1'b1 ^ ap_condition_pp6_exit_iter0_state121);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp6_iter1 <= ap_enable_reg_pp6_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp6_stage4) & (1'b0 == ap_block_pp6_stage4_subdone))) begin
            ap_enable_reg_pp6_iter2 <= ap_enable_reg_pp6_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter3 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp6_stage4) & (1'b0 == ap_block_pp6_stage4_subdone))) begin
            ap_enable_reg_pp6_iter3 <= ap_enable_reg_pp6_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter4 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp6_stage4) & (1'b0 == ap_block_pp6_stage4_subdone))) begin
            ap_enable_reg_pp6_iter4 <= ap_enable_reg_pp6_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter5 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp6_stage4) & (1'b0 == ap_block_pp6_stage4_subdone))) begin
            ap_enable_reg_pp6_iter5 <= ap_enable_reg_pp6_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter6 <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp6_stage2) & (1'b0 == ap_block_pp6_stage2_subdone)) | ((1'b1 == ap_CS_fsm_pp6_stage4) & (1'b0 == ap_block_pp6_stage4_subdone)))) begin
            ap_enable_reg_pp6_iter6 <= ap_enable_reg_pp6_iter5;
        end else if ((1'b1 == ap_CS_fsm_state120)) begin
            ap_enable_reg_pp6_iter6 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp7_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp7_stage0) & (1'b1 == ap_condition_pp7_exit_iter0_state155) & (1'b0 == ap_block_pp7_stage0_subdone))) begin
            ap_enable_reg_pp7_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state154)) begin
            ap_enable_reg_pp7_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp7_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp7_exit_iter0_state155)) begin
                ap_enable_reg_pp7_iter1 <= (1'b1 ^ ap_condition_pp7_exit_iter0_state155);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp7_iter1 <= ap_enable_reg_pp7_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp7_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter10 <= ap_enable_reg_pp7_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp7_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter11 <= ap_enable_reg_pp7_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp7_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter12 <= ap_enable_reg_pp7_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp7_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter13 <= ap_enable_reg_pp7_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp7_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter14 <= ap_enable_reg_pp7_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp7_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter15 <= ap_enable_reg_pp7_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp7_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter16 <= ap_enable_reg_pp7_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp7_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter17 <= ap_enable_reg_pp7_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp7_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter18 <= ap_enable_reg_pp7_iter17;
        end else if ((1'b1 == ap_CS_fsm_state154)) begin
            ap_enable_reg_pp7_iter18 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp7_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter2 <= ap_enable_reg_pp7_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp7_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter3 <= ap_enable_reg_pp7_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp7_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter4 <= ap_enable_reg_pp7_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp7_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter5 <= ap_enable_reg_pp7_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp7_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter6 <= ap_enable_reg_pp7_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp7_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter7 <= ap_enable_reg_pp7_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp7_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter8 <= ap_enable_reg_pp7_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp7_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter9 <= ap_enable_reg_pp7_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp8_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp8_exit_iter0_state175) & (1'b1 == ap_CS_fsm_pp8_stage0) & (1'b0 == ap_block_pp8_stage0_subdone))) begin
            ap_enable_reg_pp8_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state174)) begin
            ap_enable_reg_pp8_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp8_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp8_exit_iter0_state175) & (((1'b1 == ap_CS_fsm_pp8_stage1) & (1'b0 == ap_block_pp8_stage1_subdone)) | ((1'b1 == ap_CS_fsm_pp8_stage0) & (1'b0 == ap_block_pp8_stage0_subdone))))) begin
            ap_enable_reg_pp8_iter1 <= (1'b1 ^ ap_condition_pp8_exit_iter0_state175);
        end else if ((((1'b1 == ap_CS_fsm_pp8_stage1) & (1'b0 == ap_block_pp8_stage1_subdone)) | ((1'b1 == ap_CS_fsm_pp8_stage0) & (1'b0 == ap_block_pp8_stage0_subdone)))) begin
            ap_enable_reg_pp8_iter1 <= ap_enable_reg_pp8_iter0;
        end else if ((1'b1 == ap_CS_fsm_state174)) begin
            ap_enable_reg_pp8_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state174)) begin
        i_10_reg_541 <= 10'd0;
    end else if (((exitcond_reg_1485 == 1'd0) & (ap_enable_reg_pp8_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage0) & (1'b0 == ap_block_pp8_stage0_11001))) begin
        i_10_reg_541 <= counter_reg_1489;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond14_fu_650_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        i_1_reg_359 <= 13'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond12_reg_1245 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        i_1_reg_359 <= i_12_reg_1249;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        i_2_reg_370 <= 15'd0;
    end else if (((exitcond11_fu_757_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state38))) begin
        i_2_reg_370 <= i_13_fu_763_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        i_3_reg_381 <= 13'd0;
    end else if (((exitcond9_fu_795_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state46))) begin
        i_3_reg_381 <= i_14_reg_1287;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond10_fu_778_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state40))) begin
        i_4_reg_417 <= 13'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (exitcond8_reg_1310 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        i_4_reg_417 <= i_15_reg_1314;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        i_5_reg_428 <= 15'd0;
    end else if (((exitcond7_fu_885_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state78))) begin
        i_5_reg_428 <= i_16_fu_891_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state79)) begin
        i_6_reg_439 <= 10'd0;
    end else if (((exitcond5_fu_923_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state86))) begin
        i_6_reg_439 <= i_17_reg_1356;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond6_fu_906_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state80))) begin
        i_7_reg_475 <= 10'd0;
    end else if (((1'b0 == ap_block_pp4_stage0_11001) & (exitcond4_reg_1379 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1))) begin
        i_7_reg_475 <= i_18_reg_1383;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (exitcond3_fu_1013_p2 == 1'd0) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        i_8_reg_486 <= i_19_fu_1024_p2;
    end else if ((1'b1 == ap_CS_fsm_state116)) begin
        i_8_reg_486 <= 10'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state120)) begin
        i_9_reg_507 <= 10'd0;
    end else if (((1'b0 == ap_block_pp6_stage0_11001) & (exitcond2_reg_1440 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter1 == 1'b1))) begin
        i_9_reg_507 <= i_20_reg_1444;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond13_fu_667_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        i_reg_323 <= i_11_reg_1222;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_reg_323 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state154)) begin
        i_s_reg_530 <= 10'd0;
    end else if (((1'b0 == ap_block_pp7_stage0_11001) & (exitcond1_fu_1137_p2 == 1'd0) & (ap_enable_reg_pp7_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        i_s_reg_530 <= i_21_fu_1143_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        j_1_reg_393 <= 13'd0;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        j_1_reg_393 <= j_4_reg_1300;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        j_2_reg_451 <= 13'd0;
    end else if ((1'b1 == ap_CS_fsm_state105)) begin
        j_2_reg_451 <= j_5_reg_1369;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        j_reg_335 <= 15'd0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        j_reg_335 <= j_3_reg_1235;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_reg_pp5_iter1_exitcond3_reg_1414 == 1'd0) & (ap_enable_reg_pp5_iter2 == 1'b1))) begin
        max_val1_reg_497 <= max_val_1_fu_1113_p3;
    end else if ((1'b1 == ap_CS_fsm_state116)) begin
        max_val1_reg_497 <= mem_block2_dense_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        reg_629 <= mem_block2_dense_q1;
    end else if (((1'b1 == ap_CS_fsm_state116) | ((1'b0 == ap_block_pp8_stage1_11001) & (exitcond_reg_1485 == 1'd0) & (ap_enable_reg_pp8_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage1)) | ((1'b0 == ap_block_pp7_stage0_11001) & (exitcond1_reg_1465 == 1'd0) & (ap_enable_reg_pp7_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0)) | ((1'b0 == ap_block_pp4_stage1_11001) & (exitcond4_reg_1379 == 1'd0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (exitcond12_reg_1245 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp6_stage1_11001) & (exitcond2_reg_1440 == 1'd0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage1)))) begin
        reg_629 <= mem_block2_dense_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        sum1_reg_404 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        sum1_reg_404 <= grp_fu_564_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        sum2_reg_462 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state105)) begin
        sum2_reg_462 <= grp_fu_564_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state120)) begin
        sum3_reg_518 <= 32'd0;
    end else if (((ap_reg_pp6_iter6_exitcond2_reg_1440 == 1'd0) & (1'b0 == ap_block_pp6_stage2_11001) & (ap_enable_reg_pp6_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage2))) begin
        sum3_reg_518 <= grp_fu_553_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        sum_reg_346 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        sum_reg_346 <= grp_fu_564_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_reg_pp0_iter1_exitcond12_reg_1245 <= exitcond12_reg_1245;
        ap_reg_pp0_iter1_mem_block2_dense_add_1_reg_1259[12 : 0] <= mem_block2_dense_add_1_reg_1259[12 : 0];
        ap_reg_pp0_iter2_exitcond12_reg_1245 <= ap_reg_pp0_iter1_exitcond12_reg_1245;
        ap_reg_pp0_iter2_mem_block2_dense_add_1_reg_1259[12 : 0] <= ap_reg_pp0_iter1_mem_block2_dense_add_1_reg_1259[12 : 0];
        ap_reg_pp0_iter3_exitcond12_reg_1245 <= ap_reg_pp0_iter2_exitcond12_reg_1245;
        ap_reg_pp0_iter3_mem_block2_dense_add_1_reg_1259[12 : 0] <= ap_reg_pp0_iter2_mem_block2_dense_add_1_reg_1259[12 : 0];
        exitcond12_reg_1245 <= exitcond12_fu_689_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        ap_reg_pp2_iter1_exitcond8_reg_1310 <= exitcond8_reg_1310;
        ap_reg_pp2_iter1_mem_block1_dense_add_3_reg_1324[12 : 0] <= mem_block1_dense_add_3_reg_1324[12 : 0];
        ap_reg_pp2_iter2_exitcond8_reg_1310 <= ap_reg_pp2_iter1_exitcond8_reg_1310;
        ap_reg_pp2_iter2_mem_block1_dense_add_3_reg_1324[12 : 0] <= ap_reg_pp2_iter1_mem_block1_dense_add_3_reg_1324[12 : 0];
        ap_reg_pp2_iter3_exitcond8_reg_1310 <= ap_reg_pp2_iter2_exitcond8_reg_1310;
        ap_reg_pp2_iter3_mem_block1_dense_add_3_reg_1324[12 : 0] <= ap_reg_pp2_iter2_mem_block1_dense_add_3_reg_1324[12 : 0];
        ap_reg_pp2_iter4_exitcond8_reg_1310 <= ap_reg_pp2_iter3_exitcond8_reg_1310;
        ap_reg_pp2_iter4_mem_block1_dense_add_3_reg_1324[12 : 0] <= ap_reg_pp2_iter3_mem_block1_dense_add_3_reg_1324[12 : 0];
        exitcond8_reg_1310 <= exitcond8_fu_817_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        ap_reg_pp4_iter1_exitcond4_reg_1379 <= exitcond4_reg_1379;
        ap_reg_pp4_iter1_mem_block2_dense_add_5_reg_1393[9 : 0] <= mem_block2_dense_add_5_reg_1393[9 : 0];
        ap_reg_pp4_iter2_exitcond4_reg_1379 <= ap_reg_pp4_iter1_exitcond4_reg_1379;
        ap_reg_pp4_iter2_mem_block2_dense_add_5_reg_1393[9 : 0] <= ap_reg_pp4_iter1_mem_block2_dense_add_5_reg_1393[9 : 0];
        ap_reg_pp4_iter3_exitcond4_reg_1379 <= ap_reg_pp4_iter2_exitcond4_reg_1379;
        ap_reg_pp4_iter3_mem_block2_dense_add_5_reg_1393[9 : 0] <= ap_reg_pp4_iter2_mem_block2_dense_add_5_reg_1393[9 : 0];
        exitcond4_reg_1379 <= exitcond4_fu_945_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        ap_reg_pp5_iter1_exitcond3_reg_1414 <= exitcond3_reg_1414;
        exitcond3_reg_1414 <= exitcond3_fu_1013_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        ap_reg_pp6_iter1_exitcond2_reg_1440 <= exitcond2_reg_1440;
        ap_reg_pp6_iter1_mem_block2_dense_add_8_reg_1449[9 : 0] <= mem_block2_dense_add_8_reg_1449[9 : 0];
        ap_reg_pp6_iter2_exitcond2_reg_1440 <= ap_reg_pp6_iter1_exitcond2_reg_1440;
        ap_reg_pp6_iter2_mem_block2_dense_add_8_reg_1449[9 : 0] <= ap_reg_pp6_iter1_mem_block2_dense_add_8_reg_1449[9 : 0];
        ap_reg_pp6_iter3_exitcond2_reg_1440 <= ap_reg_pp6_iter2_exitcond2_reg_1440;
        ap_reg_pp6_iter3_mem_block2_dense_add_8_reg_1449[9 : 0] <= ap_reg_pp6_iter2_mem_block2_dense_add_8_reg_1449[9 : 0];
        ap_reg_pp6_iter4_exitcond2_reg_1440 <= ap_reg_pp6_iter3_exitcond2_reg_1440;
        ap_reg_pp6_iter4_mem_block2_dense_add_8_reg_1449[9 : 0] <= ap_reg_pp6_iter3_mem_block2_dense_add_8_reg_1449[9 : 0];
        ap_reg_pp6_iter5_exitcond2_reg_1440 <= ap_reg_pp6_iter4_exitcond2_reg_1440;
        ap_reg_pp6_iter5_mem_block2_dense_add_8_reg_1449[9 : 0] <= ap_reg_pp6_iter4_mem_block2_dense_add_8_reg_1449[9 : 0];
        ap_reg_pp6_iter6_exitcond2_reg_1440 <= ap_reg_pp6_iter5_exitcond2_reg_1440;
        exitcond2_reg_1440 <= exitcond2_fu_1120_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp7_stage0_11001)) begin
        ap_reg_pp7_iter10_exitcond1_reg_1465 <= ap_reg_pp7_iter9_exitcond1_reg_1465;
        ap_reg_pp7_iter10_mem_block2_dense_add_9_reg_1474[9 : 0] <= ap_reg_pp7_iter9_mem_block2_dense_add_9_reg_1474[9 : 0];
        ap_reg_pp7_iter11_exitcond1_reg_1465 <= ap_reg_pp7_iter10_exitcond1_reg_1465;
        ap_reg_pp7_iter11_mem_block2_dense_add_9_reg_1474[9 : 0] <= ap_reg_pp7_iter10_mem_block2_dense_add_9_reg_1474[9 : 0];
        ap_reg_pp7_iter12_exitcond1_reg_1465 <= ap_reg_pp7_iter11_exitcond1_reg_1465;
        ap_reg_pp7_iter12_mem_block2_dense_add_9_reg_1474[9 : 0] <= ap_reg_pp7_iter11_mem_block2_dense_add_9_reg_1474[9 : 0];
        ap_reg_pp7_iter13_exitcond1_reg_1465 <= ap_reg_pp7_iter12_exitcond1_reg_1465;
        ap_reg_pp7_iter13_mem_block2_dense_add_9_reg_1474[9 : 0] <= ap_reg_pp7_iter12_mem_block2_dense_add_9_reg_1474[9 : 0];
        ap_reg_pp7_iter14_exitcond1_reg_1465 <= ap_reg_pp7_iter13_exitcond1_reg_1465;
        ap_reg_pp7_iter14_mem_block2_dense_add_9_reg_1474[9 : 0] <= ap_reg_pp7_iter13_mem_block2_dense_add_9_reg_1474[9 : 0];
        ap_reg_pp7_iter15_exitcond1_reg_1465 <= ap_reg_pp7_iter14_exitcond1_reg_1465;
        ap_reg_pp7_iter15_mem_block2_dense_add_9_reg_1474[9 : 0] <= ap_reg_pp7_iter14_mem_block2_dense_add_9_reg_1474[9 : 0];
        ap_reg_pp7_iter16_exitcond1_reg_1465 <= ap_reg_pp7_iter15_exitcond1_reg_1465;
        ap_reg_pp7_iter16_mem_block2_dense_add_9_reg_1474[9 : 0] <= ap_reg_pp7_iter15_mem_block2_dense_add_9_reg_1474[9 : 0];
        ap_reg_pp7_iter17_exitcond1_reg_1465 <= ap_reg_pp7_iter16_exitcond1_reg_1465;
        ap_reg_pp7_iter17_mem_block2_dense_add_9_reg_1474[9 : 0] <= ap_reg_pp7_iter16_mem_block2_dense_add_9_reg_1474[9 : 0];
        ap_reg_pp7_iter2_exitcond1_reg_1465 <= ap_reg_pp7_iter1_exitcond1_reg_1465;
        ap_reg_pp7_iter2_mem_block2_dense_add_9_reg_1474[9 : 0] <= ap_reg_pp7_iter1_mem_block2_dense_add_9_reg_1474[9 : 0];
        ap_reg_pp7_iter3_exitcond1_reg_1465 <= ap_reg_pp7_iter2_exitcond1_reg_1465;
        ap_reg_pp7_iter3_mem_block2_dense_add_9_reg_1474[9 : 0] <= ap_reg_pp7_iter2_mem_block2_dense_add_9_reg_1474[9 : 0];
        ap_reg_pp7_iter4_exitcond1_reg_1465 <= ap_reg_pp7_iter3_exitcond1_reg_1465;
        ap_reg_pp7_iter4_mem_block2_dense_add_9_reg_1474[9 : 0] <= ap_reg_pp7_iter3_mem_block2_dense_add_9_reg_1474[9 : 0];
        ap_reg_pp7_iter5_exitcond1_reg_1465 <= ap_reg_pp7_iter4_exitcond1_reg_1465;
        ap_reg_pp7_iter5_mem_block2_dense_add_9_reg_1474[9 : 0] <= ap_reg_pp7_iter4_mem_block2_dense_add_9_reg_1474[9 : 0];
        ap_reg_pp7_iter6_exitcond1_reg_1465 <= ap_reg_pp7_iter5_exitcond1_reg_1465;
        ap_reg_pp7_iter6_mem_block2_dense_add_9_reg_1474[9 : 0] <= ap_reg_pp7_iter5_mem_block2_dense_add_9_reg_1474[9 : 0];
        ap_reg_pp7_iter7_exitcond1_reg_1465 <= ap_reg_pp7_iter6_exitcond1_reg_1465;
        ap_reg_pp7_iter7_mem_block2_dense_add_9_reg_1474[9 : 0] <= ap_reg_pp7_iter6_mem_block2_dense_add_9_reg_1474[9 : 0];
        ap_reg_pp7_iter8_exitcond1_reg_1465 <= ap_reg_pp7_iter7_exitcond1_reg_1465;
        ap_reg_pp7_iter8_mem_block2_dense_add_9_reg_1474[9 : 0] <= ap_reg_pp7_iter7_mem_block2_dense_add_9_reg_1474[9 : 0];
        ap_reg_pp7_iter9_exitcond1_reg_1465 <= ap_reg_pp7_iter8_exitcond1_reg_1465;
        ap_reg_pp7_iter9_mem_block2_dense_add_9_reg_1474[9 : 0] <= ap_reg_pp7_iter8_mem_block2_dense_add_9_reg_1474[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        ap_reg_pp7_iter1_exitcond1_reg_1465 <= exitcond1_reg_1465;
        ap_reg_pp7_iter1_mem_block2_dense_add_9_reg_1474[9 : 0] <= mem_block2_dense_add_9_reg_1474[9 : 0];
        exitcond1_reg_1465 <= exitcond1_fu_1137_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (exitcond12_reg_1245 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        bd1_load_reg_1265 <= bd1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage1_11001) & (exitcond8_reg_1310 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        bd2_load_reg_1329 <= bd2_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (exitcond4_reg_1379 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        bd3_load_reg_1399 <= bd3_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp8_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage0) & (1'b0 == ap_block_pp8_stage0_11001))) begin
        counter_reg_1489 <= counter_fu_1160_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp8_stage0) & (1'b0 == ap_block_pp8_stage0_11001))) begin
        exitcond_reg_1485 <= exitcond_fu_1154_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_11_reg_1222 <= i_11_fu_656_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        i_12_reg_1249 <= i_12_fu_695_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        i_14_reg_1287 <= i_14_fu_784_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        i_15_reg_1314 <= i_15_fu_823_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        i_17_reg_1356 <= i_17_fu_912_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter0 == 1'b1))) begin
        i_18_reg_1383 <= i_18_fu_951_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter0 == 1'b1))) begin
        i_20_reg_1444 <= i_20_fu_1126_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        j_3_reg_1235 <= j_3_fu_673_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        j_4_reg_1300 <= j_4_fu_801_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state86)) begin
        j_5_reg_1369 <= j_5_fu_929_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (exitcond3_reg_1414 == 1'd0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        max_val_2_reg_1428 <= mem_block2_dense_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (exitcond8_fu_817_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        mem_block1_dense_add_3_reg_1324[12 : 0] <= tmp_14_fu_829_p1[12 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage1_11001) & (exitcond8_reg_1310 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        mem_block1_dense_loa_1_reg_1334 <= mem_block1_dense_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond12_fu_689_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mem_block2_dense_add_1_reg_1259[12 : 0] <= tmp_2_fu_701_p1[12 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (exitcond4_fu_945_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        mem_block2_dense_add_5_reg_1393[9 : 0] <= tmp_27_fu_957_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (exitcond2_fu_1120_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        mem_block2_dense_add_8_reg_1449[9 : 0] <= tmp_39_fu_1132_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp7_stage0_11001) & (exitcond1_fu_1137_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        mem_block2_dense_add_9_reg_1474[9 : 0] <= tmp_44_fu_1149_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state7))) begin
        reg_597 <= grp_fu_589_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state9) | ((ap_reg_pp6_iter1_exitcond2_reg_1440 == 1'd0) & (1'b0 == ap_block_pp6_stage2_11001) & (ap_enable_reg_pp6_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage2)))) begin
        reg_602 <= grp_fu_567_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state21))) begin
        reg_609 <= grp_fu_584_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state26))) begin
        reg_615 <= grp_fu_580_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state27) | ((1'b0 == ap_block_pp6_stage1_11001) & (ap_reg_pp6_iter5_exitcond2_reg_1440 == 1'd0) & (ap_enable_reg_pp6_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage1)))) begin
        reg_620 <= grp_fu_564_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp4_stage0_11001) & (ap_reg_pp4_iter2_exitcond4_reg_1379 == 1'd0) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_reg_pp2_iter2_exitcond8_reg_1310 == 1'd0) & (ap_enable_reg_pp2_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter2_exitcond12_reg_1245 == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp6_stage1_11001) & (ap_reg_pp6_iter1_exitcond2_reg_1440 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage1) & (ap_enable_reg_pp6_iter1 == 1'b1)))) begin
        reg_640 <= grp_fu_553_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_reg_pp2_iter3_exitcond8_reg_1310 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        storemerge1_reg_1339 <= storemerge1_fu_877_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (ap_reg_pp4_iter3_exitcond4_reg_1379 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        storemerge2_reg_1404 <= storemerge2_fu_1005_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_reg_pp0_iter3_exitcond12_reg_1245 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        storemerge_reg_1270 <= storemerge_fu_749_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (ap_reg_pp6_iter4_exitcond2_reg_1440 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        tmp_42_reg_1455 <= grp_fu_592_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp7_stage0_11001) & (ap_reg_pp7_iter16_exitcond1_reg_1465 == 1'd0))) begin
        tmp_45_reg_1480 <= grp_fu_559_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_1154_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp8_stage0) & (1'b0 == ap_block_pp8_stage0_11001))) begin
        tmp_46_reg_1494[9 : 0] <= tmp_46_fu_1166_p1[9 : 0];
    end
end

always @ (*) begin
    if ((exitcond12_fu_689_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state28 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state28 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond8_fu_817_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state67 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state67 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond4_fu_945_p2 == 1'd1)) begin
        ap_condition_pp4_exit_iter0_state106 = 1'b1;
    end else begin
        ap_condition_pp4_exit_iter0_state106 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond3_fu_1013_p2 == 1'd1)) begin
        ap_condition_pp5_exit_iter0_state117 = 1'b1;
    end else begin
        ap_condition_pp5_exit_iter0_state117 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond2_fu_1120_p2 == 1'd1)) begin
        ap_condition_pp6_exit_iter0_state121 = 1'b1;
    end else begin
        ap_condition_pp6_exit_iter0_state121 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond1_fu_1137_p2 == 1'd1)) begin
        ap_condition_pp7_exit_iter0_state155 = 1'b1;
    end else begin
        ap_condition_pp7_exit_iter0_state155 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_fu_1154_p2 == 1'd1)) begin
        ap_condition_pp8_exit_iter0_state175 = 1'b1;
    end else begin
        ap_condition_pp8_exit_iter0_state175 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state178)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter4 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter3 == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b0) & (ap_enable_reg_pp4_iter4 == 1'b0) & (ap_enable_reg_pp4_iter2 == 1'b0) & (ap_enable_reg_pp4_iter1 == 1'b0))) begin
        ap_idle_pp4 = 1'b1;
    end else begin
        ap_idle_pp4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter2 == 1'b0) & (ap_enable_reg_pp5_iter1 == 1'b0) & (ap_enable_reg_pp5_iter0 == 1'b0))) begin
        ap_idle_pp5 = 1'b1;
    end else begin
        ap_idle_pp5 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter6 == 1'b0) & (ap_enable_reg_pp6_iter0 == 1'b0) & (ap_enable_reg_pp6_iter5 == 1'b0) & (ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter4 == 1'b0) & (ap_enable_reg_pp6_iter3 == 1'b0) & (ap_enable_reg_pp6_iter2 == 1'b0))) begin
        ap_idle_pp6 = 1'b1;
    end else begin
        ap_idle_pp6 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter0 == 1'b0) & (ap_enable_reg_pp7_iter1 == 1'b0) & (ap_enable_reg_pp7_iter18 == 1'b0) & (ap_enable_reg_pp7_iter17 == 1'b0) & (ap_enable_reg_pp7_iter16 == 1'b0) & (ap_enable_reg_pp7_iter15 == 1'b0) & (ap_enable_reg_pp7_iter14 == 1'b0) & (ap_enable_reg_pp7_iter13 == 1'b0) & (ap_enable_reg_pp7_iter12 == 1'b0) & (ap_enable_reg_pp7_iter11 == 1'b0) & (ap_enable_reg_pp7_iter10 == 1'b0) & (ap_enable_reg_pp7_iter9 == 1'b0) & (ap_enable_reg_pp7_iter8 == 1'b0) & (ap_enable_reg_pp7_iter7 == 1'b0) & (ap_enable_reg_pp7_iter6 == 1'b0) & (ap_enable_reg_pp7_iter5 == 1'b0) & (ap_enable_reg_pp7_iter4 == 1'b0) & (ap_enable_reg_pp7_iter3 == 1'b0) & (ap_enable_reg_pp7_iter2 == 1'b0))) begin
        ap_idle_pp7 = 1'b1;
    end else begin
        ap_idle_pp7 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp8_iter0 == 1'b0) & (ap_enable_reg_pp8_iter1 == 1'b0))) begin
        ap_idle_pp8 = 1'b1;
    end else begin
        ap_idle_pp8 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_reg_1485 == 1'd0) & (ap_enable_reg_pp8_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage0) & (1'b0 == ap_block_pp8_stage0))) begin
        ap_phi_mux_i_10_phi_fu_545_p4 = counter_reg_1489;
    end else begin
        ap_phi_mux_i_10_phi_fu_545_p4 = i_10_reg_541;
    end
end

always @ (*) begin
    if (((exitcond12_reg_1245 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_i_1_phi_fu_363_p4 = i_12_reg_1249;
    end else begin
        ap_phi_mux_i_1_phi_fu_363_p4 = i_1_reg_359;
    end
end

always @ (*) begin
    if (((exitcond8_reg_1310 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        ap_phi_mux_i_4_phi_fu_421_p4 = i_15_reg_1314;
    end else begin
        ap_phi_mux_i_4_phi_fu_421_p4 = i_4_reg_417;
    end
end

always @ (*) begin
    if (((exitcond4_reg_1379 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        ap_phi_mux_i_7_phi_fu_479_p4 = i_18_reg_1383;
    end else begin
        ap_phi_mux_i_7_phi_fu_479_p4 = i_7_reg_475;
    end
end

always @ (*) begin
    if (((exitcond2_reg_1440 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter1 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        ap_phi_mux_i_9_phi_fu_511_p4 = i_20_reg_1444;
    end else begin
        ap_phi_mux_i_9_phi_fu_511_p4 = i_9_reg_507;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state178)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        bd1_ce0 = 1'b1;
    end else begin
        bd1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        bd2_ce0 = 1'b1;
    end else begin
        bd2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter0 == 1'b1))) begin
        bd3_ce0 = 1'b1;
    end else begin
        bd3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp8_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage0) & (1'b0 == ap_block_pp8_stage0_11001))) begin
        class_ce0 = 1'b1;
    end else begin
        class_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_77_fu_1212_p2 == 1'd0) & (ap_enable_reg_pp8_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage0) & (1'b0 == ap_block_pp8_stage0_11001))) begin
        class_we0 = 1'b1;
    end else begin
        class_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond2_reg_1440 == 1'd0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage2) & (1'b0 == ap_block_pp6_stage2_00001))) begin
        grp_fu_553_opcode = 2'd1;
    end else if ((((exitcond8_reg_1310 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_00001)) | ((exitcond4_reg_1379 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0_00001)) | ((exitcond12_reg_1245 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_00001)) | ((ap_reg_pp6_iter5_exitcond2_reg_1440 == 1'd0) & (ap_enable_reg_pp6_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage3) & (1'b0 == ap_block_pp6_stage3_00001)))) begin
        grp_fu_553_opcode = 2'd0;
    end else begin
        grp_fu_553_opcode = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage3) & (1'b0 == ap_block_pp6_stage3))) begin
        grp_fu_553_p0 = sum3_reg_518;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        grp_fu_553_p0 = mem_block1_dense_loa_1_reg_1334;
    end else if ((((1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage2) & (1'b0 == ap_block_pp6_stage2)))) begin
        grp_fu_553_p0 = reg_629;
    end else begin
        grp_fu_553_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage3) & (1'b0 == ap_block_pp6_stage3))) begin
        grp_fu_553_p1 = reg_620;
    end else if (((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage2) & (1'b0 == ap_block_pp6_stage2))) begin
        grp_fu_553_p1 = max_val1_reg_497;
    end else if (((1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        grp_fu_553_p1 = bd3_load_reg_1399;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        grp_fu_553_p1 = bd2_load_reg_1329;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_553_p1 = bd1_load_reg_1265;
    end else begin
        grp_fu_553_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage1) & (1'b0 == ap_block_pp6_stage1))) begin
        grp_fu_564_p0 = tmp_42_reg_1455;
    end else if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state27))) begin
        grp_fu_564_p0 = reg_615;
    end else begin
        grp_fu_564_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage2) & (1'b0 == ap_block_pp6_stage2))) begin
        grp_fu_567_p0 = reg_640;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        grp_fu_567_p0 = sum2_reg_462;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        grp_fu_567_p0 = sum1_reg_404;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        grp_fu_567_p0 = reg_629;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_567_p0 = sum_reg_346;
    end else if (((1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_fu_567_p0 = mem_block1_dense_q0;
    end else begin
        grp_fu_567_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp8_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage0) & (1'b0 == ap_block_pp8_stage0_00001))) begin
        grp_fu_574_opcode = 5'd1;
    end else if (((ap_reg_pp5_iter1_exitcond3_reg_1414 == 1'd0) & (ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0_00001))) begin
        grp_fu_574_opcode = 5'd2;
    end else if ((((ap_reg_pp2_iter3_exitcond8_reg_1310 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter4 == 1'b1) & (1'b0 == ap_block_pp2_stage0_00001)) | ((ap_reg_pp4_iter3_exitcond4_reg_1379 == 1'd0) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1) & (1'b0 == ap_block_pp4_stage1_00001)) | ((ap_reg_pp0_iter3_exitcond12_reg_1245 == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_00001)))) begin
        grp_fu_574_opcode = 5'd4;
    end else begin
        grp_fu_574_opcode = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp8_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage0) & (1'b0 == ap_block_pp8_stage0))) begin
        grp_fu_574_p0 = reg_629;
    end else if (((ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_fu_574_p0 = max_val_2_reg_1428;
    end else if ((((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter4 == 1'b1) & (1'b0 == ap_block_pp2_stage0)) | ((ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1) & (1'b0 == ap_block_pp4_stage1)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)))) begin
        grp_fu_574_p0 = reg_640;
    end else begin
        grp_fu_574_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_fu_574_p1 = max_val1_reg_497;
    end else if ((((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter4 == 1'b1) & (1'b0 == ap_block_pp2_stage0)) | ((ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1) & (1'b0 == ap_block_pp4_stage1)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_enable_reg_pp8_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage0) & (1'b0 == ap_block_pp8_stage0)))) begin
        grp_fu_574_p1 = 32'd0;
    end else begin
        grp_fu_574_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state16))) begin
        grp_fu_584_p0 = reg_609;
    end else if (((1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state10))) begin
        grp_fu_584_p0 = reg_602;
    end else begin
        grp_fu_584_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state16))) begin
        grp_fu_584_p1 = reg_597;
    end else if (((1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state10))) begin
        grp_fu_584_p1 = 64'd4569063951553953530;
    end else begin
        grp_fu_584_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        grp_fu_589_p0 = tmp_25_cast_fu_918_p1;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        grp_fu_589_p0 = tmp_12_cast_fu_790_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_589_p0 = tmp_cast_fu_662_p1;
    end else begin
        grp_fu_589_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state86)) begin
        mem_block1_dense_address0 = tmp_31_fu_935_p1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter4 == 1'b1) & (1'b0 == ap_block_pp2_stage1))) begin
        mem_block1_dense_address0 = ap_reg_pp2_iter4_mem_block1_dense_add_3_reg_1324;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        mem_block1_dense_address0 = tmp_14_fu_829_p1;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        mem_block1_dense_address0 = tmp_17_fu_812_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        mem_block1_dense_address0 = tmp_11_fu_769_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        mem_block1_dense_address0 = tmp_7_fu_679_p1;
    end else begin
        mem_block1_dense_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state8) | ((1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter4 == 1'b1)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
        mem_block1_dense_ce0 = 1'b1;
    end else begin
        mem_block1_dense_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter4 == 1'b1) & (1'b0 == ap_block_pp2_stage1))) begin
        mem_block1_dense_d0 = storemerge1_reg_1339;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        mem_block1_dense_d0 = sum1_reg_404;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        mem_block1_dense_d0 = 32'd0;
    end else begin
        mem_block1_dense_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage1_11001) & (ap_reg_pp2_iter4_exitcond8_reg_1310 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter4 == 1'b1)) | ((exitcond9_fu_795_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state46)) | ((exitcond11_fu_757_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state38)))) begin
        mem_block1_dense_we0 = 1'b1;
    end else begin
        mem_block1_dense_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp8_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage0) & (1'b0 == ap_block_pp8_stage0))) begin
        mem_block2_dense_address0 = tmp_46_fu_1166_p1;
    end else if (((ap_enable_reg_pp7_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0))) begin
        mem_block2_dense_address0 = tmp_44_fu_1149_p1;
    end else if (((1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        mem_block2_dense_address0 = tmp_39_fu_1132_p1;
    end else if ((1'b1 == ap_CS_fsm_state115)) begin
        mem_block2_dense_address0 = 64'd0;
    end else if (((1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        mem_block2_dense_address0 = tmp_27_fu_957_p1;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        mem_block2_dense_address0 = tmp_24_fu_897_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        mem_block2_dense_address0 = tmp_2_fu_701_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        mem_block2_dense_address0 = tmp_5_fu_684_p1;
    end else begin
        mem_block2_dense_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter18 == 1'b1) & (1'b0 == ap_block_pp7_stage0))) begin
        mem_block2_dense_address1 = ap_reg_pp7_iter17_mem_block2_dense_add_9_reg_1474;
    end else if (((ap_enable_reg_pp6_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage2) & (1'b0 == ap_block_pp6_stage2))) begin
        mem_block2_dense_address1 = ap_reg_pp6_iter5_mem_block2_dense_add_8_reg_1449;
    end else if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0))) begin
        mem_block2_dense_address1 = tmp_37_fu_1019_p1;
    end else if (((1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter4 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        mem_block2_dense_address1 = ap_reg_pp4_iter3_mem_block2_dense_add_5_reg_1393;
    end else if ((1'b1 == ap_CS_fsm_state86)) begin
        mem_block2_dense_address1 = tmp_30_fu_940_p1;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        mem_block2_dense_address1 = tmp_18_fu_807_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        mem_block2_dense_address1 = ap_reg_pp0_iter3_mem_block2_dense_add_1_reg_1259;
    end else begin
        mem_block2_dense_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state115) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state8) | ((ap_enable_reg_pp8_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage0) & (1'b0 == ap_block_pp8_stage0_11001)) | ((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter0 == 1'b1)) | ((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter0 == 1'b1)) | ((1'b0 == ap_block_pp7_stage0_11001) & (ap_enable_reg_pp7_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        mem_block2_dense_ce0 = 1'b1;
    end else begin
        mem_block2_dense_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state46) | ((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0)) | ((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((1'b0 == ap_block_pp7_stage0_11001) & (ap_enable_reg_pp7_iter18 == 1'b1)) | ((1'b0 == ap_block_pp6_stage2_11001) & (ap_enable_reg_pp6_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage2)))) begin
        mem_block2_dense_ce1 = 1'b1;
    end else begin
        mem_block2_dense_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        mem_block2_dense_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        mem_block2_dense_d0 = sum_reg_346;
    end else begin
        mem_block2_dense_d0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter18 == 1'b1) & (1'b0 == ap_block_pp7_stage0))) begin
        mem_block2_dense_d1 = tmp_45_reg_1480;
    end else if (((ap_enable_reg_pp6_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage2) & (1'b0 == ap_block_pp6_stage2))) begin
        mem_block2_dense_d1 = reg_620;
    end else if (((1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter4 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        mem_block2_dense_d1 = storemerge2_reg_1404;
    end else if ((1'b1 == ap_CS_fsm_state86)) begin
        mem_block2_dense_d1 = sum2_reg_462;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        mem_block2_dense_d1 = storemerge_reg_1270;
    end else begin
        mem_block2_dense_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((exitcond7_fu_885_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state78)) | ((exitcond13_fu_667_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8)))) begin
        mem_block2_dense_we0 = 1'b1;
    end else begin
        mem_block2_dense_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((exitcond5_fu_923_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state86)) | ((1'b0 == ap_block_pp4_stage0_11001) & (ap_reg_pp4_iter3_exitcond4_reg_1379 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter3_exitcond12_reg_1245 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((1'b0 == ap_block_pp7_stage0_11001) & (ap_reg_pp7_iter17_exitcond1_reg_1465 == 1'd0) & (ap_enable_reg_pp7_iter18 == 1'b1)) | ((ap_reg_pp6_iter5_exitcond2_reg_1440 == 1'd0) & (1'b0 == ap_block_pp6_stage2_11001) & (ap_enable_reg_pp6_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage2)))) begin
        mem_block2_dense_we1 = 1'b1;
    end else begin
        mem_block2_dense_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp8_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage0) & (1'b0 == ap_block_pp8_stage0_11001))) begin
        result_ce0 = 1'b1;
    end else begin
        result_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_77_fu_1212_p2 == 1'd0) & (ap_enable_reg_pp8_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage0) & (1'b0 == ap_block_pp8_stage0_11001))) begin
        result_we0 = 1'b1;
    end else begin
        result_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond14_fu_650_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((exitcond13_fu_667_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((exitcond12_fu_689_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)) & ~((ap_enable_reg_pp0_iter3 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if ((((ap_enable_reg_pp0_iter3 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((exitcond12_fu_689_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            if (((exitcond11_fu_757_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state38))) begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            if (((exitcond10_fu_778_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state40))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            if (((exitcond9_fu_795_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state46))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((exitcond8_fu_817_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone)) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end else if (((exitcond8_fu_817_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state77;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_pp2_stage1 : begin
            if ((~((ap_enable_reg_pp2_iter3 == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter4 == 1'b1) & (1'b0 == ap_block_pp2_stage1_subdone)) & (1'b0 == ap_block_pp2_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((ap_enable_reg_pp2_iter3 == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter4 == 1'b1) & (1'b0 == ap_block_pp2_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state77;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            if (((exitcond7_fu_885_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state78))) begin
                ap_NS_fsm = ap_ST_fsm_state78;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state79;
            end
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            if (((exitcond6_fu_906_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state80))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state81;
            end
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            if (((exitcond5_fu_923_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state86))) begin
                ap_NS_fsm = ap_ST_fsm_state80;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state87;
            end
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_pp4_stage0 : begin
            if ((~((exitcond4_fu_945_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (ap_enable_reg_pp4_iter1 == 1'b0) & (1'b0 == ap_block_pp4_stage0_subdone)) & ~((ap_enable_reg_pp4_iter3 == 1'b0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter4 == 1'b1) & (1'b0 == ap_block_pp4_stage0_subdone)) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage1;
            end else if ((((ap_enable_reg_pp4_iter3 == 1'b0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter4 == 1'b1) & (1'b0 == ap_block_pp4_stage0_subdone)) | ((exitcond4_fu_945_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (ap_enable_reg_pp4_iter1 == 1'b0) & (1'b0 == ap_block_pp4_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state115;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_pp4_stage1 : begin
            if ((1'b0 == ap_block_pp4_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage1;
            end
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage0;
        end
        ap_ST_fsm_pp5_stage0 : begin
            if ((~((ap_enable_reg_pp5_iter1 == 1'b0) & (exitcond3_fu_1013_p2 == 1'd1) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage0_subdone)) & ~((ap_enable_reg_pp5_iter1 == 1'b0) & (ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else if ((((ap_enable_reg_pp5_iter1 == 1'b0) & (ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0_subdone)) | ((ap_enable_reg_pp5_iter1 == 1'b0) & (exitcond3_fu_1013_p2 == 1'd1) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state120;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_pp6_stage0;
        end
        ap_ST_fsm_pp6_stage0 : begin
            if ((~((exitcond2_fu_1120_p2 == 1'd1) & (ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b0 == ap_block_pp6_stage0_subdone)) & (1'b0 == ap_block_pp6_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage1;
            end else if (((exitcond2_fu_1120_p2 == 1'd1) & (ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b0 == ap_block_pp6_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state154;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end
        end
        ap_ST_fsm_pp6_stage1 : begin
            if ((1'b0 == ap_block_pp6_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage1;
            end
        end
        ap_ST_fsm_pp6_stage2 : begin
            if ((~((ap_enable_reg_pp6_iter5 == 1'b0) & (ap_enable_reg_pp6_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage2) & (1'b0 == ap_block_pp6_stage2_subdone)) & (1'b0 == ap_block_pp6_stage2_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage3;
            end else if (((ap_enable_reg_pp6_iter5 == 1'b0) & (ap_enable_reg_pp6_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage2) & (1'b0 == ap_block_pp6_stage2_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state154;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage2;
            end
        end
        ap_ST_fsm_pp6_stage3 : begin
            if ((1'b0 == ap_block_pp6_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage3;
            end
        end
        ap_ST_fsm_pp6_stage4 : begin
            if ((1'b0 == ap_block_pp6_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage4;
            end
        end
        ap_ST_fsm_state154 : begin
            ap_NS_fsm = ap_ST_fsm_pp7_stage0;
        end
        ap_ST_fsm_pp7_stage0 : begin
            if ((~((exitcond1_fu_1137_p2 == 1'd1) & (ap_enable_reg_pp7_iter1 == 1'b0) & (ap_enable_reg_pp7_iter0 == 1'b1) & (1'b0 == ap_block_pp7_stage0_subdone)) & ~((ap_enable_reg_pp7_iter18 == 1'b1) & (ap_enable_reg_pp7_iter17 == 1'b0) & (1'b0 == ap_block_pp7_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end else if ((((ap_enable_reg_pp7_iter18 == 1'b1) & (ap_enable_reg_pp7_iter17 == 1'b0) & (1'b0 == ap_block_pp7_stage0_subdone)) | ((exitcond1_fu_1137_p2 == 1'd1) & (ap_enable_reg_pp7_iter1 == 1'b0) & (ap_enable_reg_pp7_iter0 == 1'b1) & (1'b0 == ap_block_pp7_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state174;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end
        end
        ap_ST_fsm_state174 : begin
            ap_NS_fsm = ap_ST_fsm_pp8_stage0;
        end
        ap_ST_fsm_pp8_stage0 : begin
            if ((~((ap_enable_reg_pp8_iter0 == 1'b1) & (1'b0 == ap_block_pp8_stage0_subdone) & (exitcond_fu_1154_p2 == 1'd1)) & (1'b0 == ap_block_pp8_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage1;
            end else if (((ap_enable_reg_pp8_iter0 == 1'b1) & (1'b0 == ap_block_pp8_stage0_subdone) & (exitcond_fu_1154_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state178;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage0;
            end
        end
        ap_ST_fsm_pp8_stage1 : begin
            if ((1'b0 == ap_block_pp8_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage1;
            end
        end
        ap_ST_fsm_state178 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_pp2_stage1 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[32'd90];

assign ap_CS_fsm_pp4_stage1 = ap_CS_fsm[32'd91];

assign ap_CS_fsm_pp5_stage0 = ap_CS_fsm[32'd94];

assign ap_CS_fsm_pp6_stage0 = ap_CS_fsm[32'd96];

assign ap_CS_fsm_pp6_stage1 = ap_CS_fsm[32'd97];

assign ap_CS_fsm_pp6_stage2 = ap_CS_fsm[32'd98];

assign ap_CS_fsm_pp6_stage3 = ap_CS_fsm[32'd99];

assign ap_CS_fsm_pp6_stage4 = ap_CS_fsm[32'd100];

assign ap_CS_fsm_pp7_stage0 = ap_CS_fsm[32'd102];

assign ap_CS_fsm_pp8_stage0 = ap_CS_fsm[32'd104];

assign ap_CS_fsm_pp8_stage1 = ap_CS_fsm[32'd105];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state100 = ap_CS_fsm[32'd84];

assign ap_CS_fsm_state104 = ap_CS_fsm[32'd88];

assign ap_CS_fsm_state105 = ap_CS_fsm[32'd89];

assign ap_CS_fsm_state115 = ap_CS_fsm[32'd92];

assign ap_CS_fsm_state116 = ap_CS_fsm[32'd93];

assign ap_CS_fsm_state120 = ap_CS_fsm[32'd95];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state154 = ap_CS_fsm[32'd101];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state174 = ap_CS_fsm[32'd103];

assign ap_CS_fsm_state178 = ap_CS_fsm[32'd106];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state86 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state87 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state88 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state93 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state94 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_state99 = ap_CS_fsm[32'd83];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage2_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage3_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp8_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp8_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp8_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp8_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp8_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp8_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_state106_pp4_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state107_pp4_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state108_pp4_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state109_pp4_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state110_pp4_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state111_pp4_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state112_pp4_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state113_pp4_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state114_pp4_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state117_pp5_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state118_pp5_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state119_pp5_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state121_pp6_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state122_pp6_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state123_pp6_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state124_pp6_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state125_pp6_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state126_pp6_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state127_pp6_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state128_pp6_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state129_pp6_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state130_pp6_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state131_pp6_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state132_pp6_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state133_pp6_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state134_pp6_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state135_pp6_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state136_pp6_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state137_pp6_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state138_pp6_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state139_pp6_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state140_pp6_stage4_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state141_pp6_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state142_pp6_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state143_pp6_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state144_pp6_stage3_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state145_pp6_stage4_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state146_pp6_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state147_pp6_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state148_pp6_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state149_pp6_stage3_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state150_pp6_stage4_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state151_pp6_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state152_pp6_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state153_pp6_stage2_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state155_pp7_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state156_pp7_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state157_pp7_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state158_pp7_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state159_pp7_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state160_pp7_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state161_pp7_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state162_pp7_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state163_pp7_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state164_pp7_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state165_pp7_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state166_pp7_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state167_pp7_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state168_pp7_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state169_pp7_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state170_pp7_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state171_pp7_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state172_pp7_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state173_pp7_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state175_pp8_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state176_pp8_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state177_pp8_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp2_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp2_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp2_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state73_pp2_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state74_pp2_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state75_pp2_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state76_pp2_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp4 = (ap_idle_pp4 ^ 1'b1);

assign ap_enable_pp5 = (ap_idle_pp5 ^ 1'b1);

assign ap_enable_pp6 = (ap_idle_pp6 ^ 1'b1);

assign ap_enable_pp7 = (ap_idle_pp7 ^ 1'b1);

assign ap_enable_pp8 = (ap_idle_pp8 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign bd1_address0 = tmp_2_fu_701_p1;

assign bd2_address0 = tmp_14_fu_829_p1;

assign bd3_address0 = tmp_27_fu_957_p1;

assign class_address0 = tmp_46_reg_1494;

assign class_d0 = i_10_reg_541;

assign counter_fu_1160_p2 = (ap_phi_mux_i_10_phi_fu_545_p4 + 10'd1);

assign exitcond10_fu_778_p2 = ((i_3_reg_381 == 13'd4096) ? 1'b1 : 1'b0);

assign exitcond11_fu_757_p2 = ((i_2_reg_370 == 15'd25088) ? 1'b1 : 1'b0);

assign exitcond12_fu_689_p2 = ((ap_phi_mux_i_1_phi_fu_363_p4 == 13'd4096) ? 1'b1 : 1'b0);

assign exitcond13_fu_667_p2 = ((j_reg_335 == 15'd25088) ? 1'b1 : 1'b0);

assign exitcond14_fu_650_p2 = ((i_reg_323 == 13'd4096) ? 1'b1 : 1'b0);

assign exitcond1_fu_1137_p2 = ((i_s_reg_530 == 10'd1000) ? 1'b1 : 1'b0);

assign exitcond2_fu_1120_p2 = ((ap_phi_mux_i_9_phi_fu_511_p4 == 10'd1000) ? 1'b1 : 1'b0);

assign exitcond3_fu_1013_p2 = ((i_8_reg_486 == 10'd1000) ? 1'b1 : 1'b0);

assign exitcond4_fu_945_p2 = ((ap_phi_mux_i_7_phi_fu_479_p4 == 10'd1000) ? 1'b1 : 1'b0);

assign exitcond5_fu_923_p2 = ((j_2_reg_451 == 13'd4096) ? 1'b1 : 1'b0);

assign exitcond6_fu_906_p2 = ((i_6_reg_439 == 10'd1000) ? 1'b1 : 1'b0);

assign exitcond7_fu_885_p2 = ((i_5_reg_428 == 15'd25088) ? 1'b1 : 1'b0);

assign exitcond8_fu_817_p2 = ((ap_phi_mux_i_4_phi_fu_421_p4 == 13'd4096) ? 1'b1 : 1'b0);

assign exitcond9_fu_795_p2 = ((j_1_reg_393 == 13'd4096) ? 1'b1 : 1'b0);

assign exitcond_fu_1154_p2 = ((ap_phi_mux_i_10_phi_fu_545_p4 == 10'd1000) ? 1'b1 : 1'b0);

assign i_11_fu_656_p2 = (13'd1 + i_reg_323);

assign i_12_fu_695_p2 = (ap_phi_mux_i_1_phi_fu_363_p4 + 13'd1);

assign i_13_fu_763_p2 = (i_2_reg_370 + 15'd1);

assign i_14_fu_784_p2 = (13'd1 + i_3_reg_381);

assign i_15_fu_823_p2 = (ap_phi_mux_i_4_phi_fu_421_p4 + 13'd1);

assign i_16_fu_891_p2 = (i_5_reg_428 + 15'd1);

assign i_17_fu_912_p2 = (10'd1 + i_6_reg_439);

assign i_18_fu_951_p2 = (ap_phi_mux_i_7_phi_fu_479_p4 + 10'd1);

assign i_19_fu_1024_p2 = (10'd1 + i_8_reg_486);

assign i_20_fu_1126_p2 = (ap_phi_mux_i_9_phi_fu_511_p4 + 10'd1);

assign i_21_fu_1143_p2 = (i_s_reg_530 + 10'd1);

assign j_3_fu_673_p2 = (j_reg_335 + 15'd1);

assign j_4_fu_801_p2 = (j_1_reg_393 + 13'd1);

assign j_5_fu_929_p2 = (j_2_reg_451 + 13'd1);

assign max_val1_to_int_fu_1047_p1 = max_val1_reg_497;

assign max_val_1_fu_1113_p3 = ((tmp_72_fu_1107_p2[0:0] === 1'b1) ? max_val_2_reg_1428 : max_val1_reg_497);

assign max_val_2_to_int_fu_1030_p1 = max_val_2_reg_1428;

assign mem_block2_dense_loa_6_fu_1176_p1 = reg_629;

assign notlhs1_fu_853_p2 = ((tmp_48_fu_839_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs2_fu_981_p2 = ((tmp_59_fu_967_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs3_fu_1065_p2 = ((tmp_64_fu_1033_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs4_fu_1083_p2 = ((tmp_66_fu_1051_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs5_fu_1194_p2 = ((tmp_73_fu_1180_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs_fu_725_p2 = ((tmp_fu_711_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notrhs1_fu_859_p2 = ((tmp_65_fu_849_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs2_fu_987_p2 = ((tmp_74_fu_977_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs3_fu_1071_p2 = ((tmp_78_fu_1043_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs4_fu_1089_p2 = ((tmp_79_fu_1061_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs5_fu_1200_p2 = ((tmp_80_fu_1190_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs_fu_731_p2 = ((tmp_49_fu_721_p1 == 23'd0) ? 1'b1 : 1'b0);

assign result_address0 = tmp_46_reg_1494;

assign storemerge1_fu_877_p3 = ((tmp_58_fu_871_p2[0:0] === 1'b1) ? 32'd0 : reg_640);

assign storemerge2_fu_1005_p3 = ((tmp_63_fu_999_p2[0:0] === 1'b1) ? 32'd0 : reg_640);

assign storemerge_fu_749_p3 = ((tmp_29_fu_743_p2[0:0] === 1'b1) ? 32'd0 : reg_640);

assign tmp_11_fu_769_p1 = i_2_reg_370;

assign tmp_12_cast_fu_790_p1 = tmp_60_fu_774_p1;

assign tmp_12_fu_646_p1 = i_reg_323[1:0];

assign tmp_14_fu_829_p1 = ap_phi_mux_i_4_phi_fu_421_p4;

assign tmp_15_to_int_fu_835_p1 = reg_640;

assign tmp_16_fu_737_p2 = (notrhs_fu_731_p2 | notlhs_fu_725_p2);

assign tmp_17_fu_812_p1 = i_3_reg_381;

assign tmp_18_fu_807_p1 = j_1_reg_393;

assign tmp_24_fu_897_p1 = i_5_reg_428;

assign tmp_25_cast_fu_918_p1 = tmp_67_fu_902_p1;

assign tmp_27_fu_957_p1 = ap_phi_mux_i_7_phi_fu_479_p4;

assign tmp_28_to_int_fu_963_p1 = reg_640;

assign tmp_29_fu_743_p2 = (tmp_16_fu_737_p2 & grp_fu_574_p2);

assign tmp_2_fu_701_p1 = ap_phi_mux_i_1_phi_fu_363_p4;

assign tmp_30_fu_940_p1 = i_6_reg_439;

assign tmp_31_fu_935_p1 = j_2_reg_451;

assign tmp_37_fu_1019_p1 = i_8_reg_486;

assign tmp_39_fu_1132_p1 = ap_phi_mux_i_9_phi_fu_511_p4;

assign tmp_3_to_int_fu_707_p1 = reg_640;

assign tmp_44_fu_1149_p1 = i_s_reg_530;

assign tmp_46_fu_1166_p1 = ap_phi_mux_i_10_phi_fu_545_p4;

assign tmp_48_fu_839_p4 = {{tmp_15_to_int_fu_835_p1[30:23]}};

assign tmp_49_fu_721_p1 = tmp_3_to_int_fu_707_p1[22:0];

assign tmp_50_fu_865_p2 = (notrhs1_fu_859_p2 | notlhs1_fu_853_p2);

assign tmp_58_fu_871_p2 = (tmp_50_fu_865_p2 & grp_fu_574_p2);

assign tmp_59_fu_967_p4 = {{tmp_28_to_int_fu_963_p1[30:23]}};

assign tmp_5_fu_684_p1 = i_reg_323;

assign tmp_60_fu_774_p1 = i_3_reg_381[1:0];

assign tmp_61_fu_993_p2 = (notrhs2_fu_987_p2 | notlhs2_fu_981_p2);

assign tmp_63_fu_999_p2 = (tmp_61_fu_993_p2 & grp_fu_574_p2);

assign tmp_64_fu_1033_p4 = {{max_val_2_to_int_fu_1030_p1[30:23]}};

assign tmp_65_fu_849_p1 = tmp_15_to_int_fu_835_p1[22:0];

assign tmp_66_fu_1051_p4 = {{max_val1_to_int_fu_1047_p1[30:23]}};

assign tmp_67_fu_902_p1 = i_6_reg_439[1:0];

assign tmp_68_fu_1077_p2 = (notrhs3_fu_1071_p2 | notlhs3_fu_1065_p2);

assign tmp_69_fu_1095_p2 = (notrhs4_fu_1089_p2 | notlhs4_fu_1083_p2);

assign tmp_70_fu_1101_p2 = (tmp_69_fu_1095_p2 & tmp_68_fu_1077_p2);

assign tmp_72_fu_1107_p2 = (tmp_70_fu_1101_p2 & grp_fu_574_p2);

assign tmp_73_fu_1180_p4 = {{mem_block2_dense_loa_6_fu_1176_p1[30:23]}};

assign tmp_74_fu_977_p1 = tmp_28_to_int_fu_963_p1[22:0];

assign tmp_75_fu_1206_p2 = (notrhs5_fu_1200_p2 | notlhs5_fu_1194_p2);

assign tmp_77_fu_1212_p2 = (tmp_75_fu_1206_p2 & grp_fu_574_p2);

assign tmp_78_fu_1043_p1 = max_val_2_to_int_fu_1030_p1[22:0];

assign tmp_79_fu_1061_p1 = max_val1_to_int_fu_1047_p1[22:0];

assign tmp_7_fu_679_p1 = j_reg_335;

assign tmp_80_fu_1190_p1 = mem_block2_dense_loa_6_fu_1176_p1[22:0];

assign tmp_cast_fu_662_p1 = tmp_12_fu_646_p1;

assign tmp_fu_711_p4 = {{tmp_3_to_int_fu_707_p1[30:23]}};

always @ (posedge ap_clk) begin
    mem_block2_dense_add_1_reg_1259[14:13] <= 2'b00;
    ap_reg_pp0_iter1_mem_block2_dense_add_1_reg_1259[14:13] <= 2'b00;
    ap_reg_pp0_iter2_mem_block2_dense_add_1_reg_1259[14:13] <= 2'b00;
    ap_reg_pp0_iter3_mem_block2_dense_add_1_reg_1259[14:13] <= 2'b00;
    mem_block1_dense_add_3_reg_1324[14:13] <= 2'b00;
    ap_reg_pp2_iter1_mem_block1_dense_add_3_reg_1324[14:13] <= 2'b00;
    ap_reg_pp2_iter2_mem_block1_dense_add_3_reg_1324[14:13] <= 2'b00;
    ap_reg_pp2_iter3_mem_block1_dense_add_3_reg_1324[14:13] <= 2'b00;
    ap_reg_pp2_iter4_mem_block1_dense_add_3_reg_1324[14:13] <= 2'b00;
    mem_block2_dense_add_5_reg_1393[14:10] <= 5'b00000;
    ap_reg_pp4_iter1_mem_block2_dense_add_5_reg_1393[14:10] <= 5'b00000;
    ap_reg_pp4_iter2_mem_block2_dense_add_5_reg_1393[14:10] <= 5'b00000;
    ap_reg_pp4_iter3_mem_block2_dense_add_5_reg_1393[14:10] <= 5'b00000;
    mem_block2_dense_add_8_reg_1449[14:10] <= 5'b00000;
    ap_reg_pp6_iter1_mem_block2_dense_add_8_reg_1449[14:10] <= 5'b00000;
    ap_reg_pp6_iter2_mem_block2_dense_add_8_reg_1449[14:10] <= 5'b00000;
    ap_reg_pp6_iter3_mem_block2_dense_add_8_reg_1449[14:10] <= 5'b00000;
    ap_reg_pp6_iter4_mem_block2_dense_add_8_reg_1449[14:10] <= 5'b00000;
    ap_reg_pp6_iter5_mem_block2_dense_add_8_reg_1449[14:10] <= 5'b00000;
    mem_block2_dense_add_9_reg_1474[14:10] <= 5'b00000;
    ap_reg_pp7_iter1_mem_block2_dense_add_9_reg_1474[14:10] <= 5'b00000;
    ap_reg_pp7_iter2_mem_block2_dense_add_9_reg_1474[14:10] <= 5'b00000;
    ap_reg_pp7_iter3_mem_block2_dense_add_9_reg_1474[14:10] <= 5'b00000;
    ap_reg_pp7_iter4_mem_block2_dense_add_9_reg_1474[14:10] <= 5'b00000;
    ap_reg_pp7_iter5_mem_block2_dense_add_9_reg_1474[14:10] <= 5'b00000;
    ap_reg_pp7_iter6_mem_block2_dense_add_9_reg_1474[14:10] <= 5'b00000;
    ap_reg_pp7_iter7_mem_block2_dense_add_9_reg_1474[14:10] <= 5'b00000;
    ap_reg_pp7_iter8_mem_block2_dense_add_9_reg_1474[14:10] <= 5'b00000;
    ap_reg_pp7_iter9_mem_block2_dense_add_9_reg_1474[14:10] <= 5'b00000;
    ap_reg_pp7_iter10_mem_block2_dense_add_9_reg_1474[14:10] <= 5'b00000;
    ap_reg_pp7_iter11_mem_block2_dense_add_9_reg_1474[14:10] <= 5'b00000;
    ap_reg_pp7_iter12_mem_block2_dense_add_9_reg_1474[14:10] <= 5'b00000;
    ap_reg_pp7_iter13_mem_block2_dense_add_9_reg_1474[14:10] <= 5'b00000;
    ap_reg_pp7_iter14_mem_block2_dense_add_9_reg_1474[14:10] <= 5'b00000;
    ap_reg_pp7_iter15_mem_block2_dense_add_9_reg_1474[14:10] <= 5'b00000;
    ap_reg_pp7_iter16_mem_block2_dense_add_9_reg_1474[14:10] <= 5'b00000;
    ap_reg_pp7_iter17_mem_block2_dense_add_9_reg_1474[14:10] <= 5'b00000;
    tmp_46_reg_1494[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
end

endmodule //dense_reluflatten_softmax
